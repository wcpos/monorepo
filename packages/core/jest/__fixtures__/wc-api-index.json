{
	"namespace": "wc/v3",
	"routes": {
		"/wc/v3": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"namespace": {
							"required": false,
							"default": "wc/v3"
						},
						"context": {
							"required": false,
							"default": "view"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3"
			}
		},
		"/wc/v3/coupons": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"page": {
							"required": false,
							"default": 1,
							"description": "Current page of the collection.",
							"type": "integer"
						},
						"per_page": {
							"required": false,
							"default": 10,
							"description": "Maximum number of items to be returned in result set.",
							"type": "integer"
						},
						"search": {
							"required": false,
							"description": "Limit results to those matching a string.",
							"type": "string"
						},
						"after": {
							"required": false,
							"description": "Limit response to resources published after a given ISO8601 compliant date.",
							"type": "string"
						},
						"before": {
							"required": false,
							"description": "Limit response to resources published before a given ISO8601 compliant date.",
							"type": "string"
						},
						"exclude": {
							"required": false,
							"default": [],
							"description": "Ensure result set excludes specific IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"include": {
							"required": false,
							"default": [],
							"description": "Limit result set to specific ids.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"offset": {
							"required": false,
							"description": "Offset the result set by a specific number of items.",
							"type": "integer"
						},
						"order": {
							"required": false,
							"default": "desc",
							"enum": ["asc", "desc"],
							"description": "Order sort attribute ascending or descending.",
							"type": "string"
						},
						"orderby": {
							"required": false,
							"default": "date",
							"enum": ["date", "id", "include", "title", "slug"],
							"description": "Sort collection by object attribute.",
							"type": "string"
						},
						"code": {
							"required": false,
							"description": "Limit result set to resources with a specific code.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"code": {
							"required": true,
							"description": "Coupon code.",
							"type": "string"
						},
						"amount": {
							"required": false,
							"description": "The amount of discount. Should always be numeric, even if setting a percentage.",
							"type": "string"
						},
						"discount_type": {
							"required": false,
							"default": "fixed_cart",
							"enum": ["percent", "fixed_cart", "fixed_product"],
							"description": "Determines the type of discount that will be applied.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "Coupon description.",
							"type": "string"
						},
						"date_expires": {
							"required": false,
							"description": "The date the coupon expires, in the site's timezone.",
							"type": "string"
						},
						"date_expires_gmt": {
							"required": false,
							"description": "The date the coupon expires, as GMT.",
							"type": "string"
						},
						"individual_use": {
							"required": false,
							"default": false,
							"description": "If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.",
							"type": "boolean"
						},
						"product_ids": {
							"required": false,
							"description": "List of product IDs the coupon can be used on.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"excluded_product_ids": {
							"required": false,
							"description": "List of product IDs the coupon cannot be used on.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"usage_limit": {
							"required": false,
							"description": "How many times the coupon can be used in total.",
							"type": "integer"
						},
						"usage_limit_per_user": {
							"required": false,
							"description": "How many times the coupon can be used per customer.",
							"type": "integer"
						},
						"limit_usage_to_x_items": {
							"required": false,
							"description": "Max number of items in the cart the coupon can be applied to.",
							"type": "integer"
						},
						"free_shipping": {
							"required": false,
							"default": false,
							"description": "If true and if the free shipping method requires a coupon, this coupon will enable free shipping.",
							"type": "boolean"
						},
						"product_categories": {
							"required": false,
							"description": "List of category IDs the coupon applies to.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"excluded_product_categories": {
							"required": false,
							"description": "List of category IDs the coupon does not apply to.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"exclude_sale_items": {
							"required": false,
							"default": false,
							"description": "If true, this coupon will not be applied to items that have sale prices.",
							"type": "boolean"
						},
						"minimum_amount": {
							"required": false,
							"description": "Minimum order amount that needs to be in the cart before coupon applies.",
							"type": "string"
						},
						"maximum_amount": {
							"required": false,
							"description": "Maximum order amount allowed when using the coupon.",
							"type": "string"
						},
						"email_restrictions": {
							"required": false,
							"description": "List of email addresses that can use this coupon.",
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/coupons"
			}
		},
		"/wc/v3/coupons/(?P<id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"code": {
							"required": false,
							"description": "Coupon code.",
							"type": "string"
						},
						"amount": {
							"required": false,
							"description": "The amount of discount. Should always be numeric, even if setting a percentage.",
							"type": "string"
						},
						"discount_type": {
							"required": false,
							"enum": ["percent", "fixed_cart", "fixed_product"],
							"description": "Determines the type of discount that will be applied.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "Coupon description.",
							"type": "string"
						},
						"date_expires": {
							"required": false,
							"description": "The date the coupon expires, in the site's timezone.",
							"type": "string"
						},
						"date_expires_gmt": {
							"required": false,
							"description": "The date the coupon expires, as GMT.",
							"type": "string"
						},
						"individual_use": {
							"required": false,
							"description": "If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.",
							"type": "boolean"
						},
						"product_ids": {
							"required": false,
							"description": "List of product IDs the coupon can be used on.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"excluded_product_ids": {
							"required": false,
							"description": "List of product IDs the coupon cannot be used on.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"usage_limit": {
							"required": false,
							"description": "How many times the coupon can be used in total.",
							"type": "integer"
						},
						"usage_limit_per_user": {
							"required": false,
							"description": "How many times the coupon can be used per customer.",
							"type": "integer"
						},
						"limit_usage_to_x_items": {
							"required": false,
							"description": "Max number of items in the cart the coupon can be applied to.",
							"type": "integer"
						},
						"free_shipping": {
							"required": false,
							"description": "If true and if the free shipping method requires a coupon, this coupon will enable free shipping.",
							"type": "boolean"
						},
						"product_categories": {
							"required": false,
							"description": "List of category IDs the coupon applies to.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"excluded_product_categories": {
							"required": false,
							"description": "List of category IDs the coupon does not apply to.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"exclude_sale_items": {
							"required": false,
							"description": "If true, this coupon will not be applied to items that have sale prices.",
							"type": "boolean"
						},
						"minimum_amount": {
							"required": false,
							"description": "Minimum order amount that needs to be in the cart before coupon applies.",
							"type": "string"
						},
						"maximum_amount": {
							"required": false,
							"description": "Maximum order amount allowed when using the coupon.",
							"type": "string"
						},
						"email_restrictions": {
							"required": false,
							"description": "List of email addresses that can use this coupon.",
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Whether to bypass trash and force deletion.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/coupons/batch": {
			"namespace": "wc/v3",
			"methods": ["POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"code": {
							"required": false,
							"description": "Coupon code.",
							"type": "string"
						},
						"amount": {
							"required": false,
							"description": "The amount of discount. Should always be numeric, even if setting a percentage.",
							"type": "string"
						},
						"discount_type": {
							"required": false,
							"enum": ["percent", "fixed_cart", "fixed_product"],
							"description": "Determines the type of discount that will be applied.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "Coupon description.",
							"type": "string"
						},
						"date_expires": {
							"required": false,
							"description": "The date the coupon expires, in the site's timezone.",
							"type": "string"
						},
						"date_expires_gmt": {
							"required": false,
							"description": "The date the coupon expires, as GMT.",
							"type": "string"
						},
						"individual_use": {
							"required": false,
							"description": "If true, the coupon can only be used individually. Other applied coupons will be removed from the cart.",
							"type": "boolean"
						},
						"product_ids": {
							"required": false,
							"description": "List of product IDs the coupon can be used on.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"excluded_product_ids": {
							"required": false,
							"description": "List of product IDs the coupon cannot be used on.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"usage_limit": {
							"required": false,
							"description": "How many times the coupon can be used in total.",
							"type": "integer"
						},
						"usage_limit_per_user": {
							"required": false,
							"description": "How many times the coupon can be used per customer.",
							"type": "integer"
						},
						"limit_usage_to_x_items": {
							"required": false,
							"description": "Max number of items in the cart the coupon can be applied to.",
							"type": "integer"
						},
						"free_shipping": {
							"required": false,
							"description": "If true and if the free shipping method requires a coupon, this coupon will enable free shipping.",
							"type": "boolean"
						},
						"product_categories": {
							"required": false,
							"description": "List of category IDs the coupon applies to.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"excluded_product_categories": {
							"required": false,
							"description": "List of category IDs the coupon does not apply to.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"exclude_sale_items": {
							"required": false,
							"description": "If true, this coupon will not be applied to items that have sale prices.",
							"type": "boolean"
						},
						"minimum_amount": {
							"required": false,
							"description": "Minimum order amount that needs to be in the cart before coupon applies.",
							"type": "string"
						},
						"maximum_amount": {
							"required": false,
							"description": "Maximum order amount allowed when using the coupon.",
							"type": "string"
						},
						"email_restrictions": {
							"required": false,
							"description": "List of email addresses that can use this coupon.",
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/coupons/batch"
			}
		},
		"/wc/v3/customers/(?P<customer_id>[\\d]+)/downloads": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"customer_id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				}
			]
		},
		"/wc/v3/customers": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"page": {
							"required": false,
							"default": 1,
							"description": "Current page of the collection.",
							"type": "integer"
						},
						"per_page": {
							"required": false,
							"default": 10,
							"description": "Maximum number of items to be returned in result set.",
							"type": "integer"
						},
						"search": {
							"required": false,
							"description": "Limit results to those matching a string.",
							"type": "string"
						},
						"exclude": {
							"required": false,
							"default": [],
							"description": "Ensure result set excludes specific IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"include": {
							"required": false,
							"default": [],
							"description": "Limit result set to specific IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"offset": {
							"required": false,
							"description": "Offset the result set by a specific number of items.",
							"type": "integer"
						},
						"order": {
							"required": false,
							"default": "asc",
							"enum": ["asc", "desc"],
							"description": "Order sort attribute ascending or descending.",
							"type": "string"
						},
						"orderby": {
							"required": false,
							"default": "name",
							"enum": ["id", "include", "name", "registered_date"],
							"description": "Sort collection by object attribute.",
							"type": "string"
						},
						"email": {
							"required": false,
							"description": "Limit result set to resources with a specific email.",
							"type": "string"
						},
						"role": {
							"required": false,
							"default": "customer",
							"enum": [
								"all",
								"administrator",
								"editor",
								"author",
								"contributor",
								"subscriber",
								"customer",
								"shop_manager",
								"cashier"
							],
							"description": "Limit result set to resources with a specific role.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"email": {
							"required": true,
							"description": "New user email address.",
							"type": "string"
						},
						"first_name": {
							"required": false,
							"description": "Customer first name.",
							"type": "string"
						},
						"last_name": {
							"required": false,
							"description": "Customer last name.",
							"type": "string"
						},
						"username": {
							"required": false,
							"description": "New user username.",
							"type": "string"
						},
						"password": {
							"required": false,
							"description": "New user password.",
							"type": "string"
						},
						"billing": {
							"required": false,
							"description": "List of billing address data.",
							"type": "object"
						},
						"shipping": {
							"required": false,
							"description": "List of shipping address data.",
							"type": "object"
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/customers"
			}
		},
		"/wc/v3/customers/(?P<id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"email": {
							"required": false,
							"description": "The email address for the customer.",
							"type": "string"
						},
						"first_name": {
							"required": false,
							"description": "Customer first name.",
							"type": "string"
						},
						"last_name": {
							"required": false,
							"description": "Customer last name.",
							"type": "string"
						},
						"username": {
							"required": false,
							"description": "Customer login name.",
							"type": "string"
						},
						"password": {
							"required": false,
							"description": "Customer password.",
							"type": "string"
						},
						"billing": {
							"required": false,
							"description": "List of billing address data.",
							"type": "object"
						},
						"shipping": {
							"required": false,
							"description": "List of shipping address data.",
							"type": "object"
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Required to be true, as resource does not support trashing.",
							"type": "boolean"
						},
						"reassign": {
							"required": false,
							"default": 0,
							"description": "ID to reassign posts to.",
							"type": "integer"
						}
					}
				}
			]
		},
		"/wc/v3/customers/batch": {
			"namespace": "wc/v3",
			"methods": ["POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"email": {
							"required": false,
							"description": "The email address for the customer.",
							"type": "string"
						},
						"first_name": {
							"required": false,
							"description": "Customer first name.",
							"type": "string"
						},
						"last_name": {
							"required": false,
							"description": "Customer last name.",
							"type": "string"
						},
						"username": {
							"required": false,
							"description": "Customer login name.",
							"type": "string"
						},
						"password": {
							"required": false,
							"description": "Customer password.",
							"type": "string"
						},
						"billing": {
							"required": false,
							"description": "List of billing address data.",
							"type": "object"
						},
						"shipping": {
							"required": false,
							"description": "List of shipping address data.",
							"type": "object"
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/customers/batch"
			}
		},
		"/wc/v3/orders/(?P<order_id>[\\d]+)/notes": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"order_id": {
							"required": false,
							"description": "The order ID.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"type": {
							"required": false,
							"default": "any",
							"enum": ["any", "customer", "internal"],
							"description": "Limit result to customers or internal notes.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"order_id": {
							"required": false,
							"description": "The order ID.",
							"type": "integer"
						},
						"note": {
							"required": true,
							"description": "Order note content.",
							"type": "string"
						},
						"customer_note": {
							"required": false,
							"default": false,
							"description": "If true, the note will be shown to customers and they will be notified. If false, the note will be for admin reference only.",
							"type": "boolean"
						},
						"added_by_user": {
							"required": false,
							"default": false,
							"description": "If true, this note will be attributed to the current user. If false, the note will be attributed to the system.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/orders/(?P<order_id>[\\d]+)/notes/(?P<id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"order_id": {
							"required": false,
							"description": "The order ID.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"order_id": {
							"required": false,
							"description": "The order ID.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Required to be true, as resource does not support trashing.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/orders/(?P<order_id>[\\d]+)/refunds": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"order_id": {
							"required": false,
							"description": "The order ID.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"page": {
							"required": false,
							"default": 1,
							"description": "Current page of the collection.",
							"type": "integer"
						},
						"per_page": {
							"required": false,
							"default": 10,
							"description": "Maximum number of items to be returned in result set.",
							"type": "integer"
						},
						"search": {
							"required": false,
							"description": "Limit results to those matching a string.",
							"type": "string"
						},
						"after": {
							"required": false,
							"description": "Limit response to resources published after a given ISO8601 compliant date.",
							"type": "string"
						},
						"before": {
							"required": false,
							"description": "Limit response to resources published before a given ISO8601 compliant date.",
							"type": "string"
						},
						"exclude": {
							"required": false,
							"default": [],
							"description": "Ensure result set excludes specific IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"include": {
							"required": false,
							"default": [],
							"description": "Limit result set to specific ids.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"offset": {
							"required": false,
							"description": "Offset the result set by a specific number of items.",
							"type": "integer"
						},
						"order": {
							"required": false,
							"default": "desc",
							"enum": ["asc", "desc"],
							"description": "Order sort attribute ascending or descending.",
							"type": "string"
						},
						"orderby": {
							"required": false,
							"default": "date",
							"enum": ["date", "id", "include", "title", "slug"],
							"description": "Sort collection by object attribute.",
							"type": "string"
						},
						"parent": {
							"required": false,
							"default": [],
							"description": "Limit result set to those of particular parent IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"parent_exclude": {
							"required": false,
							"default": [],
							"description": "Limit result set to all items except those of a particular parent ID.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"dp": {
							"required": false,
							"default": 2,
							"description": "Number of decimal points to use in each resource.",
							"type": "integer"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"order_id": {
							"required": false,
							"description": "The order ID.",
							"type": "integer"
						},
						"amount": {
							"required": false,
							"description": "Refund amount.",
							"type": "string"
						},
						"reason": {
							"required": false,
							"description": "Reason for refund.",
							"type": "string"
						},
						"refunded_by": {
							"required": false,
							"description": "User ID of user who created the refund.",
							"type": "integer"
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"api_refund": {
							"required": false,
							"default": true,
							"description": "When true, the payment gateway API is used to generate the refund.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/orders/(?P<order_id>[\\d]+)/refunds/(?P<id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"order_id": {
							"required": false,
							"description": "The order ID.",
							"type": "integer"
						},
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"order_id": {
							"required": false,
							"description": "The order ID.",
							"type": "integer"
						},
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": true,
							"description": "Required to be true, as resource does not support trashing.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/orders": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"page": {
							"required": false,
							"default": 1,
							"description": "Current page of the collection.",
							"type": "integer"
						},
						"per_page": {
							"required": false,
							"default": 10,
							"description": "Maximum number of items to be returned in result set.",
							"type": "integer"
						},
						"search": {
							"required": false,
							"description": "Limit results to those matching a string.",
							"type": "string"
						},
						"after": {
							"required": false,
							"description": "Limit response to resources published after a given ISO8601 compliant date.",
							"type": "string"
						},
						"before": {
							"required": false,
							"description": "Limit response to resources published before a given ISO8601 compliant date.",
							"type": "string"
						},
						"exclude": {
							"required": false,
							"default": [],
							"description": "Ensure result set excludes specific IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"include": {
							"required": false,
							"default": [],
							"description": "Limit result set to specific ids.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"offset": {
							"required": false,
							"description": "Offset the result set by a specific number of items.",
							"type": "integer"
						},
						"order": {
							"required": false,
							"default": "desc",
							"enum": ["asc", "desc"],
							"description": "Order sort attribute ascending or descending.",
							"type": "string"
						},
						"orderby": {
							"required": false,
							"default": "date",
							"enum": ["date", "id", "include", "title", "slug"],
							"description": "Sort collection by object attribute.",
							"type": "string"
						},
						"parent": {
							"required": false,
							"default": [],
							"description": "Limit result set to those of particular parent IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"parent_exclude": {
							"required": false,
							"default": [],
							"description": "Limit result set to all items except those of a particular parent ID.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"status": {
							"required": false,
							"default": "any",
							"description": "Limit result set to orders which have specific statuses.",
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"any",
									"trash",
									"pending",
									"processing",
									"on-hold",
									"completed",
									"cancelled",
									"refunded",
									"failed"
								]
							}
						},
						"customer": {
							"required": false,
							"description": "Limit result set to orders assigned a specific customer.",
							"type": "integer"
						},
						"product": {
							"required": false,
							"description": "Limit result set to orders assigned a specific product.",
							"type": "integer"
						},
						"dp": {
							"required": false,
							"default": 2,
							"description": "Number of decimal points to use in each resource.",
							"type": "integer"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"parent_id": {
							"required": false,
							"description": "Parent order ID.",
							"type": "integer"
						},
						"status": {
							"required": false,
							"default": "pending",
							"enum": [
								"pending",
								"processing",
								"on-hold",
								"completed",
								"cancelled",
								"refunded",
								"failed"
							],
							"description": "Order status.",
							"type": "string"
						},
						"currency": {
							"required": false,
							"default": "AUD",
							"enum": [
								"AED",
								"AFN",
								"ALL",
								"AMD",
								"ANG",
								"AOA",
								"ARS",
								"AUD",
								"AWG",
								"AZN",
								"BAM",
								"BBD",
								"BDT",
								"BGN",
								"BHD",
								"BIF",
								"BMD",
								"BND",
								"BOB",
								"BRL",
								"BSD",
								"BTC",
								"BTN",
								"BWP",
								"BYR",
								"BYN",
								"BZD",
								"CAD",
								"CDF",
								"CHF",
								"CLP",
								"CNY",
								"COP",
								"CRC",
								"CUC",
								"CUP",
								"CVE",
								"CZK",
								"DJF",
								"DKK",
								"DOP",
								"DZD",
								"EGP",
								"ERN",
								"ETB",
								"EUR",
								"FJD",
								"FKP",
								"GBP",
								"GEL",
								"GGP",
								"GHS",
								"GIP",
								"GMD",
								"GNF",
								"GTQ",
								"GYD",
								"HKD",
								"HNL",
								"HRK",
								"HTG",
								"HUF",
								"IDR",
								"ILS",
								"IMP",
								"INR",
								"IQD",
								"IRR",
								"IRT",
								"ISK",
								"JEP",
								"JMD",
								"JOD",
								"JPY",
								"KES",
								"KGS",
								"KHR",
								"KMF",
								"KPW",
								"KRW",
								"KWD",
								"KYD",
								"KZT",
								"LAK",
								"LBP",
								"LKR",
								"LRD",
								"LSL",
								"LYD",
								"MAD",
								"MDL",
								"MGA",
								"MKD",
								"MMK",
								"MNT",
								"MOP",
								"MRU",
								"MUR",
								"MVR",
								"MWK",
								"MXN",
								"MYR",
								"MZN",
								"NAD",
								"NGN",
								"NIO",
								"NOK",
								"NPR",
								"NZD",
								"OMR",
								"PAB",
								"PEN",
								"PGK",
								"PHP",
								"PKR",
								"PLN",
								"PRB",
								"PYG",
								"QAR",
								"RON",
								"RSD",
								"RUB",
								"RWF",
								"SAR",
								"SBD",
								"SCR",
								"SDG",
								"SEK",
								"SGD",
								"SHP",
								"SLL",
								"SOS",
								"SRD",
								"SSP",
								"STN",
								"SYP",
								"SZL",
								"THB",
								"TJS",
								"TMT",
								"TND",
								"TOP",
								"TRY",
								"TTD",
								"TWD",
								"TZS",
								"UAH",
								"UGX",
								"USD",
								"UYU",
								"UZS",
								"VEF",
								"VES",
								"VND",
								"VUV",
								"WST",
								"XAF",
								"XCD",
								"XOF",
								"XPF",
								"YER",
								"ZAR",
								"ZMW"
							],
							"description": "Currency the order was created with, in ISO format.",
							"type": "string"
						},
						"customer_id": {
							"required": false,
							"default": 0,
							"description": "User ID who owns the order. 0 for guests.",
							"type": "integer"
						},
						"customer_note": {
							"required": false,
							"description": "Note left by customer during checkout.",
							"type": "string"
						},
						"billing": {
							"required": false,
							"description": "Billing address.",
							"type": "object"
						},
						"shipping": {
							"required": false,
							"description": "Shipping address.",
							"type": "object"
						},
						"payment_method": {
							"required": false,
							"description": "Payment method ID.",
							"type": "string"
						},
						"payment_method_title": {
							"required": false,
							"description": "Payment method title.",
							"type": "string"
						},
						"transaction_id": {
							"required": false,
							"description": "Unique transaction ID.",
							"type": "string"
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"line_items": {
							"required": false,
							"description": "Line items data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Item ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"name": {
										"description": "Product name.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"product_id": {
										"description": "Product ID.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"variation_id": {
										"description": "Variation ID, if applicable.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"quantity": {
										"description": "Quantity ordered.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"tax_class": {
										"description": "Tax class of product.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"subtotal": {
										"description": "Line subtotal (before discounts).",
										"type": "string",
										"context": ["view", "edit"]
									},
									"subtotal_tax": {
										"description": "Line subtotal tax (before discounts).",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"total": {
										"description": "Line total (after discounts).",
										"type": "string",
										"context": ["view", "edit"]
									},
									"total_tax": {
										"description": "Line total tax (after discounts).",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"taxes": {
										"description": "Line taxes.",
										"type": "array",
										"context": ["view", "edit"],
										"readonly": true,
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Tax rate ID.",
													"type": "integer",
													"context": ["view", "edit"]
												},
												"total": {
													"description": "Tax total.",
													"type": "string",
													"context": ["view", "edit"]
												},
												"subtotal": {
													"description": "Tax subtotal.",
													"type": "string",
													"context": ["view", "edit"]
												}
											}
										}
									},
									"meta_data": {
										"description": "Meta data.",
										"type": "array",
										"context": ["view", "edit"],
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Meta ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"key": {
													"description": "Meta key.",
													"type": "string",
													"context": ["view", "edit"]
												},
												"value": {
													"description": "Meta value.",
													"type": "mixed",
													"context": ["view", "edit"]
												}
											}
										}
									},
									"sku": {
										"description": "Product SKU.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"price": {
										"description": "Product price.",
										"type": "number",
										"context": ["view", "edit"],
										"readonly": true
									}
								}
							}
						},
						"shipping_lines": {
							"required": false,
							"description": "Shipping lines data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Item ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"method_title": {
										"description": "Shipping method name.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"method_id": {
										"description": "Shipping method ID.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"instance_id": {
										"description": "Shipping instance ID.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"total": {
										"description": "Line total (after discounts).",
										"type": "string",
										"context": ["view", "edit"]
									},
									"total_tax": {
										"description": "Line total tax (after discounts).",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"taxes": {
										"description": "Line taxes.",
										"type": "array",
										"context": ["view", "edit"],
										"readonly": true,
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Tax rate ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"total": {
													"description": "Tax total.",
													"type": "string",
													"context": ["view", "edit"],
													"readonly": true
												}
											}
										}
									},
									"meta_data": {
										"description": "Meta data.",
										"type": "array",
										"context": ["view", "edit"],
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Meta ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"key": {
													"description": "Meta key.",
													"type": "string",
													"context": ["view", "edit"]
												},
												"value": {
													"description": "Meta value.",
													"type": "mixed",
													"context": ["view", "edit"]
												}
											}
										}
									}
								}
							}
						},
						"fee_lines": {
							"required": false,
							"description": "Fee lines data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Item ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"name": {
										"description": "Fee name.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"tax_class": {
										"description": "Tax class of fee.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"tax_status": {
										"description": "Tax status of fee.",
										"type": "string",
										"context": ["view", "edit"],
										"enum": ["taxable", "none"]
									},
									"total": {
										"description": "Line total (after discounts).",
										"type": "string",
										"context": ["view", "edit"]
									},
									"total_tax": {
										"description": "Line total tax (after discounts).",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"taxes": {
										"description": "Line taxes.",
										"type": "array",
										"context": ["view", "edit"],
										"readonly": true,
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Tax rate ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"total": {
													"description": "Tax total.",
													"type": "string",
													"context": ["view", "edit"],
													"readonly": true
												},
												"subtotal": {
													"description": "Tax subtotal.",
													"type": "string",
													"context": ["view", "edit"],
													"readonly": true
												}
											}
										}
									},
									"meta_data": {
										"description": "Meta data.",
										"type": "array",
										"context": ["view", "edit"],
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Meta ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"key": {
													"description": "Meta key.",
													"type": "string",
													"context": ["view", "edit"]
												},
												"value": {
													"description": "Meta value.",
													"type": "mixed",
													"context": ["view", "edit"]
												}
											}
										}
									}
								}
							}
						},
						"coupon_lines": {
							"required": false,
							"description": "Coupons line data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Item ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"code": {
										"description": "Coupon code.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"discount": {
										"description": "Discount total.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"discount_tax": {
										"description": "Discount total tax.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"meta_data": {
										"description": "Meta data.",
										"type": "array",
										"context": ["view", "edit"],
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Meta ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"key": {
													"description": "Meta key.",
													"type": "string",
													"context": ["view", "edit"]
												},
												"value": {
													"description": "Meta value.",
													"type": "mixed",
													"context": ["view", "edit"]
												}
											}
										}
									}
								}
							}
						},
						"set_paid": {
							"required": false,
							"default": false,
							"description": "Define if the order is paid. It will set the status to processing and reduce stock items.",
							"type": "boolean"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/orders"
			}
		},
		"/wc/v3/orders/(?P<id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"parent_id": {
							"required": false,
							"description": "Parent order ID.",
							"type": "integer"
						},
						"status": {
							"required": false,
							"enum": [
								"pending",
								"processing",
								"on-hold",
								"completed",
								"cancelled",
								"refunded",
								"failed"
							],
							"description": "Order status.",
							"type": "string"
						},
						"currency": {
							"required": false,
							"enum": [
								"AED",
								"AFN",
								"ALL",
								"AMD",
								"ANG",
								"AOA",
								"ARS",
								"AUD",
								"AWG",
								"AZN",
								"BAM",
								"BBD",
								"BDT",
								"BGN",
								"BHD",
								"BIF",
								"BMD",
								"BND",
								"BOB",
								"BRL",
								"BSD",
								"BTC",
								"BTN",
								"BWP",
								"BYR",
								"BYN",
								"BZD",
								"CAD",
								"CDF",
								"CHF",
								"CLP",
								"CNY",
								"COP",
								"CRC",
								"CUC",
								"CUP",
								"CVE",
								"CZK",
								"DJF",
								"DKK",
								"DOP",
								"DZD",
								"EGP",
								"ERN",
								"ETB",
								"EUR",
								"FJD",
								"FKP",
								"GBP",
								"GEL",
								"GGP",
								"GHS",
								"GIP",
								"GMD",
								"GNF",
								"GTQ",
								"GYD",
								"HKD",
								"HNL",
								"HRK",
								"HTG",
								"HUF",
								"IDR",
								"ILS",
								"IMP",
								"INR",
								"IQD",
								"IRR",
								"IRT",
								"ISK",
								"JEP",
								"JMD",
								"JOD",
								"JPY",
								"KES",
								"KGS",
								"KHR",
								"KMF",
								"KPW",
								"KRW",
								"KWD",
								"KYD",
								"KZT",
								"LAK",
								"LBP",
								"LKR",
								"LRD",
								"LSL",
								"LYD",
								"MAD",
								"MDL",
								"MGA",
								"MKD",
								"MMK",
								"MNT",
								"MOP",
								"MRU",
								"MUR",
								"MVR",
								"MWK",
								"MXN",
								"MYR",
								"MZN",
								"NAD",
								"NGN",
								"NIO",
								"NOK",
								"NPR",
								"NZD",
								"OMR",
								"PAB",
								"PEN",
								"PGK",
								"PHP",
								"PKR",
								"PLN",
								"PRB",
								"PYG",
								"QAR",
								"RON",
								"RSD",
								"RUB",
								"RWF",
								"SAR",
								"SBD",
								"SCR",
								"SDG",
								"SEK",
								"SGD",
								"SHP",
								"SLL",
								"SOS",
								"SRD",
								"SSP",
								"STN",
								"SYP",
								"SZL",
								"THB",
								"TJS",
								"TMT",
								"TND",
								"TOP",
								"TRY",
								"TTD",
								"TWD",
								"TZS",
								"UAH",
								"UGX",
								"USD",
								"UYU",
								"UZS",
								"VEF",
								"VES",
								"VND",
								"VUV",
								"WST",
								"XAF",
								"XCD",
								"XOF",
								"XPF",
								"YER",
								"ZAR",
								"ZMW"
							],
							"description": "Currency the order was created with, in ISO format.",
							"type": "string"
						},
						"customer_id": {
							"required": false,
							"description": "User ID who owns the order. 0 for guests.",
							"type": "integer"
						},
						"customer_note": {
							"required": false,
							"description": "Note left by customer during checkout.",
							"type": "string"
						},
						"billing": {
							"required": false,
							"description": "Billing address.",
							"type": "object"
						},
						"shipping": {
							"required": false,
							"description": "Shipping address.",
							"type": "object"
						},
						"payment_method": {
							"required": false,
							"description": "Payment method ID.",
							"type": "string"
						},
						"payment_method_title": {
							"required": false,
							"description": "Payment method title.",
							"type": "string"
						},
						"transaction_id": {
							"required": false,
							"description": "Unique transaction ID.",
							"type": "string"
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"line_items": {
							"required": false,
							"description": "Line items data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Item ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"name": {
										"description": "Product name.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"product_id": {
										"description": "Product ID.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"variation_id": {
										"description": "Variation ID, if applicable.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"quantity": {
										"description": "Quantity ordered.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"tax_class": {
										"description": "Tax class of product.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"subtotal": {
										"description": "Line subtotal (before discounts).",
										"type": "string",
										"context": ["view", "edit"]
									},
									"subtotal_tax": {
										"description": "Line subtotal tax (before discounts).",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"total": {
										"description": "Line total (after discounts).",
										"type": "string",
										"context": ["view", "edit"]
									},
									"total_tax": {
										"description": "Line total tax (after discounts).",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"taxes": {
										"description": "Line taxes.",
										"type": "array",
										"context": ["view", "edit"],
										"readonly": true,
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Tax rate ID.",
													"type": "integer",
													"context": ["view", "edit"]
												},
												"total": {
													"description": "Tax total.",
													"type": "string",
													"context": ["view", "edit"]
												},
												"subtotal": {
													"description": "Tax subtotal.",
													"type": "string",
													"context": ["view", "edit"]
												}
											}
										}
									},
									"meta_data": {
										"description": "Meta data.",
										"type": "array",
										"context": ["view", "edit"],
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Meta ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"key": {
													"description": "Meta key.",
													"type": "string",
													"context": ["view", "edit"]
												},
												"value": {
													"description": "Meta value.",
													"type": "mixed",
													"context": ["view", "edit"]
												}
											}
										}
									},
									"sku": {
										"description": "Product SKU.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"price": {
										"description": "Product price.",
										"type": "number",
										"context": ["view", "edit"],
										"readonly": true
									}
								}
							}
						},
						"shipping_lines": {
							"required": false,
							"description": "Shipping lines data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Item ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"method_title": {
										"description": "Shipping method name.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"method_id": {
										"description": "Shipping method ID.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"instance_id": {
										"description": "Shipping instance ID.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"total": {
										"description": "Line total (after discounts).",
										"type": "string",
										"context": ["view", "edit"]
									},
									"total_tax": {
										"description": "Line total tax (after discounts).",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"taxes": {
										"description": "Line taxes.",
										"type": "array",
										"context": ["view", "edit"],
										"readonly": true,
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Tax rate ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"total": {
													"description": "Tax total.",
													"type": "string",
													"context": ["view", "edit"],
													"readonly": true
												}
											}
										}
									},
									"meta_data": {
										"description": "Meta data.",
										"type": "array",
										"context": ["view", "edit"],
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Meta ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"key": {
													"description": "Meta key.",
													"type": "string",
													"context": ["view", "edit"]
												},
												"value": {
													"description": "Meta value.",
													"type": "mixed",
													"context": ["view", "edit"]
												}
											}
										}
									}
								}
							}
						},
						"fee_lines": {
							"required": false,
							"description": "Fee lines data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Item ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"name": {
										"description": "Fee name.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"tax_class": {
										"description": "Tax class of fee.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"tax_status": {
										"description": "Tax status of fee.",
										"type": "string",
										"context": ["view", "edit"],
										"enum": ["taxable", "none"]
									},
									"total": {
										"description": "Line total (after discounts).",
										"type": "string",
										"context": ["view", "edit"]
									},
									"total_tax": {
										"description": "Line total tax (after discounts).",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"taxes": {
										"description": "Line taxes.",
										"type": "array",
										"context": ["view", "edit"],
										"readonly": true,
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Tax rate ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"total": {
													"description": "Tax total.",
													"type": "string",
													"context": ["view", "edit"],
													"readonly": true
												},
												"subtotal": {
													"description": "Tax subtotal.",
													"type": "string",
													"context": ["view", "edit"],
													"readonly": true
												}
											}
										}
									},
									"meta_data": {
										"description": "Meta data.",
										"type": "array",
										"context": ["view", "edit"],
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Meta ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"key": {
													"description": "Meta key.",
													"type": "string",
													"context": ["view", "edit"]
												},
												"value": {
													"description": "Meta value.",
													"type": "mixed",
													"context": ["view", "edit"]
												}
											}
										}
									}
								}
							}
						},
						"coupon_lines": {
							"required": false,
							"description": "Coupons line data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Item ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"code": {
										"description": "Coupon code.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"discount": {
										"description": "Discount total.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"discount_tax": {
										"description": "Discount total tax.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"meta_data": {
										"description": "Meta data.",
										"type": "array",
										"context": ["view", "edit"],
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Meta ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"key": {
													"description": "Meta key.",
													"type": "string",
													"context": ["view", "edit"]
												},
												"value": {
													"description": "Meta value.",
													"type": "mixed",
													"context": ["view", "edit"]
												}
											}
										}
									}
								}
							}
						},
						"set_paid": {
							"required": false,
							"description": "Define if the order is paid. It will set the status to processing and reduce stock items.",
							"type": "boolean"
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Whether to bypass trash and force deletion.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/orders/batch": {
			"namespace": "wc/v3",
			"methods": ["POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"parent_id": {
							"required": false,
							"description": "Parent order ID.",
							"type": "integer"
						},
						"status": {
							"required": false,
							"enum": [
								"pending",
								"processing",
								"on-hold",
								"completed",
								"cancelled",
								"refunded",
								"failed"
							],
							"description": "Order status.",
							"type": "string"
						},
						"currency": {
							"required": false,
							"enum": [
								"AED",
								"AFN",
								"ALL",
								"AMD",
								"ANG",
								"AOA",
								"ARS",
								"AUD",
								"AWG",
								"AZN",
								"BAM",
								"BBD",
								"BDT",
								"BGN",
								"BHD",
								"BIF",
								"BMD",
								"BND",
								"BOB",
								"BRL",
								"BSD",
								"BTC",
								"BTN",
								"BWP",
								"BYR",
								"BYN",
								"BZD",
								"CAD",
								"CDF",
								"CHF",
								"CLP",
								"CNY",
								"COP",
								"CRC",
								"CUC",
								"CUP",
								"CVE",
								"CZK",
								"DJF",
								"DKK",
								"DOP",
								"DZD",
								"EGP",
								"ERN",
								"ETB",
								"EUR",
								"FJD",
								"FKP",
								"GBP",
								"GEL",
								"GGP",
								"GHS",
								"GIP",
								"GMD",
								"GNF",
								"GTQ",
								"GYD",
								"HKD",
								"HNL",
								"HRK",
								"HTG",
								"HUF",
								"IDR",
								"ILS",
								"IMP",
								"INR",
								"IQD",
								"IRR",
								"IRT",
								"ISK",
								"JEP",
								"JMD",
								"JOD",
								"JPY",
								"KES",
								"KGS",
								"KHR",
								"KMF",
								"KPW",
								"KRW",
								"KWD",
								"KYD",
								"KZT",
								"LAK",
								"LBP",
								"LKR",
								"LRD",
								"LSL",
								"LYD",
								"MAD",
								"MDL",
								"MGA",
								"MKD",
								"MMK",
								"MNT",
								"MOP",
								"MRU",
								"MUR",
								"MVR",
								"MWK",
								"MXN",
								"MYR",
								"MZN",
								"NAD",
								"NGN",
								"NIO",
								"NOK",
								"NPR",
								"NZD",
								"OMR",
								"PAB",
								"PEN",
								"PGK",
								"PHP",
								"PKR",
								"PLN",
								"PRB",
								"PYG",
								"QAR",
								"RON",
								"RSD",
								"RUB",
								"RWF",
								"SAR",
								"SBD",
								"SCR",
								"SDG",
								"SEK",
								"SGD",
								"SHP",
								"SLL",
								"SOS",
								"SRD",
								"SSP",
								"STN",
								"SYP",
								"SZL",
								"THB",
								"TJS",
								"TMT",
								"TND",
								"TOP",
								"TRY",
								"TTD",
								"TWD",
								"TZS",
								"UAH",
								"UGX",
								"USD",
								"UYU",
								"UZS",
								"VEF",
								"VES",
								"VND",
								"VUV",
								"WST",
								"XAF",
								"XCD",
								"XOF",
								"XPF",
								"YER",
								"ZAR",
								"ZMW"
							],
							"description": "Currency the order was created with, in ISO format.",
							"type": "string"
						},
						"customer_id": {
							"required": false,
							"description": "User ID who owns the order. 0 for guests.",
							"type": "integer"
						},
						"customer_note": {
							"required": false,
							"description": "Note left by customer during checkout.",
							"type": "string"
						},
						"billing": {
							"required": false,
							"description": "Billing address.",
							"type": "object"
						},
						"shipping": {
							"required": false,
							"description": "Shipping address.",
							"type": "object"
						},
						"payment_method": {
							"required": false,
							"description": "Payment method ID.",
							"type": "string"
						},
						"payment_method_title": {
							"required": false,
							"description": "Payment method title.",
							"type": "string"
						},
						"transaction_id": {
							"required": false,
							"description": "Unique transaction ID.",
							"type": "string"
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"line_items": {
							"required": false,
							"description": "Line items data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Item ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"name": {
										"description": "Product name.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"product_id": {
										"description": "Product ID.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"variation_id": {
										"description": "Variation ID, if applicable.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"quantity": {
										"description": "Quantity ordered.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"tax_class": {
										"description": "Tax class of product.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"subtotal": {
										"description": "Line subtotal (before discounts).",
										"type": "string",
										"context": ["view", "edit"]
									},
									"subtotal_tax": {
										"description": "Line subtotal tax (before discounts).",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"total": {
										"description": "Line total (after discounts).",
										"type": "string",
										"context": ["view", "edit"]
									},
									"total_tax": {
										"description": "Line total tax (after discounts).",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"taxes": {
										"description": "Line taxes.",
										"type": "array",
										"context": ["view", "edit"],
										"readonly": true,
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Tax rate ID.",
													"type": "integer",
													"context": ["view", "edit"]
												},
												"total": {
													"description": "Tax total.",
													"type": "string",
													"context": ["view", "edit"]
												},
												"subtotal": {
													"description": "Tax subtotal.",
													"type": "string",
													"context": ["view", "edit"]
												}
											}
										}
									},
									"meta_data": {
										"description": "Meta data.",
										"type": "array",
										"context": ["view", "edit"],
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Meta ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"key": {
													"description": "Meta key.",
													"type": "string",
													"context": ["view", "edit"]
												},
												"value": {
													"description": "Meta value.",
													"type": "mixed",
													"context": ["view", "edit"]
												}
											}
										}
									},
									"sku": {
										"description": "Product SKU.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"price": {
										"description": "Product price.",
										"type": "number",
										"context": ["view", "edit"],
										"readonly": true
									}
								}
							}
						},
						"shipping_lines": {
							"required": false,
							"description": "Shipping lines data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Item ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"method_title": {
										"description": "Shipping method name.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"method_id": {
										"description": "Shipping method ID.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"instance_id": {
										"description": "Shipping instance ID.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"total": {
										"description": "Line total (after discounts).",
										"type": "string",
										"context": ["view", "edit"]
									},
									"total_tax": {
										"description": "Line total tax (after discounts).",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"taxes": {
										"description": "Line taxes.",
										"type": "array",
										"context": ["view", "edit"],
										"readonly": true,
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Tax rate ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"total": {
													"description": "Tax total.",
													"type": "string",
													"context": ["view", "edit"],
													"readonly": true
												}
											}
										}
									},
									"meta_data": {
										"description": "Meta data.",
										"type": "array",
										"context": ["view", "edit"],
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Meta ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"key": {
													"description": "Meta key.",
													"type": "string",
													"context": ["view", "edit"]
												},
												"value": {
													"description": "Meta value.",
													"type": "mixed",
													"context": ["view", "edit"]
												}
											}
										}
									}
								}
							}
						},
						"fee_lines": {
							"required": false,
							"description": "Fee lines data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Item ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"name": {
										"description": "Fee name.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"tax_class": {
										"description": "Tax class of fee.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"tax_status": {
										"description": "Tax status of fee.",
										"type": "string",
										"context": ["view", "edit"],
										"enum": ["taxable", "none"]
									},
									"total": {
										"description": "Line total (after discounts).",
										"type": "string",
										"context": ["view", "edit"]
									},
									"total_tax": {
										"description": "Line total tax (after discounts).",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"taxes": {
										"description": "Line taxes.",
										"type": "array",
										"context": ["view", "edit"],
										"readonly": true,
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Tax rate ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"total": {
													"description": "Tax total.",
													"type": "string",
													"context": ["view", "edit"],
													"readonly": true
												},
												"subtotal": {
													"description": "Tax subtotal.",
													"type": "string",
													"context": ["view", "edit"],
													"readonly": true
												}
											}
										}
									},
									"meta_data": {
										"description": "Meta data.",
										"type": "array",
										"context": ["view", "edit"],
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Meta ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"key": {
													"description": "Meta key.",
													"type": "string",
													"context": ["view", "edit"]
												},
												"value": {
													"description": "Meta value.",
													"type": "mixed",
													"context": ["view", "edit"]
												}
											}
										}
									}
								}
							}
						},
						"coupon_lines": {
							"required": false,
							"description": "Coupons line data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Item ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"code": {
										"description": "Coupon code.",
										"type": "mixed",
										"context": ["view", "edit"]
									},
									"discount": {
										"description": "Discount total.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"discount_tax": {
										"description": "Discount total tax.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"meta_data": {
										"description": "Meta data.",
										"type": "array",
										"context": ["view", "edit"],
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Meta ID.",
													"type": "integer",
													"context": ["view", "edit"],
													"readonly": true
												},
												"key": {
													"description": "Meta key.",
													"type": "string",
													"context": ["view", "edit"]
												},
												"value": {
													"description": "Meta value.",
													"type": "mixed",
													"context": ["view", "edit"]
												}
											}
										}
									}
								}
							}
						},
						"set_paid": {
							"required": false,
							"description": "Define if the order is paid. It will set the status to processing and reduce stock items.",
							"type": "boolean"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/orders/batch"
			}
		},
		"/wc/v3/products/attributes/(?P<attribute_id>[\\d]+)/terms": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"attribute_id": {
							"required": false,
							"description": "Unique identifier for the attribute of the terms.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"page": {
							"required": false,
							"default": 1,
							"description": "Current page of the collection.",
							"type": "integer"
						},
						"per_page": {
							"required": false,
							"default": 10,
							"description": "Maximum number of items to be returned in result set.",
							"type": "integer"
						},
						"search": {
							"required": false,
							"description": "Limit results to those matching a string.",
							"type": "string"
						},
						"exclude": {
							"required": false,
							"default": [],
							"description": "Ensure result set excludes specific IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"include": {
							"required": false,
							"default": [],
							"description": "Limit result set to specific ids.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"order": {
							"required": false,
							"default": "asc",
							"enum": ["asc", "desc"],
							"description": "Order sort attribute ascending or descending.",
							"type": "string"
						},
						"orderby": {
							"required": false,
							"default": "name",
							"enum": ["id", "include", "name", "slug", "term_group", "description", "count"],
							"description": "Sort collection by resource attribute.",
							"type": "string"
						},
						"hide_empty": {
							"required": false,
							"default": false,
							"description": "Whether to hide resources not assigned to any products.",
							"type": "boolean"
						},
						"parent": {
							"required": false,
							"description": "Limit result set to resources assigned to a specific parent.",
							"type": "integer"
						},
						"product": {
							"required": false,
							"description": "Limit result set to resources assigned to a specific product.",
							"type": "integer"
						},
						"slug": {
							"required": false,
							"description": "Limit result set to resources with a specific slug.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"attribute_id": {
							"required": false,
							"description": "Unique identifier for the attribute of the terms.",
							"type": "integer"
						},
						"name": {
							"required": true,
							"description": "Name for the resource.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "An alphanumeric identifier for the resource unique to its type.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "HTML description of the resource.",
							"type": "string"
						},
						"menu_order": {
							"required": false,
							"description": "Menu order, used to custom sort the resource.",
							"type": "integer"
						}
					}
				}
			]
		},
		"/wc/v3/products/attributes/(?P<attribute_id>[\\d]+)/terms/(?P<id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"attribute_id": {
							"required": false,
							"description": "Unique identifier for the attribute of the terms.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"attribute_id": {
							"required": false,
							"description": "Unique identifier for the attribute of the terms.",
							"type": "integer"
						},
						"name": {
							"required": false,
							"description": "Term name.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "An alphanumeric identifier for the resource unique to its type.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "HTML description of the resource.",
							"type": "string"
						},
						"menu_order": {
							"required": false,
							"description": "Menu order, used to custom sort the resource.",
							"type": "integer"
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"attribute_id": {
							"required": false,
							"description": "Unique identifier for the attribute of the terms.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Required to be true, as resource does not support trashing.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/products/attributes/(?P<attribute_id>[\\d]+)/terms/batch": {
			"namespace": "wc/v3",
			"methods": ["POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"attribute_id": {
							"required": false,
							"description": "Unique identifier for the attribute of the terms.",
							"type": "integer"
						},
						"name": {
							"required": false,
							"description": "Term name.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "An alphanumeric identifier for the resource unique to its type.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "HTML description of the resource.",
							"type": "string"
						},
						"menu_order": {
							"required": false,
							"description": "Menu order, used to custom sort the resource.",
							"type": "integer"
						}
					}
				}
			]
		},
		"/wc/v3/products/attributes": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"name": {
							"required": true,
							"description": "Name for the resource.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "An alphanumeric identifier for the resource unique to its type.",
							"type": "string"
						},
						"type": {
							"required": false,
							"default": "select",
							"enum": ["select"],
							"description": "Type of attribute.",
							"type": "string"
						},
						"order_by": {
							"required": false,
							"default": "menu_order",
							"enum": ["menu_order", "name", "name_num", "id"],
							"description": "Default sort order.",
							"type": "string"
						},
						"has_archives": {
							"required": false,
							"default": false,
							"description": "Enable/Disable attribute archives.",
							"type": "boolean"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/products/attributes"
			}
		},
		"/wc/v3/products/attributes/(?P<id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"name": {
							"required": false,
							"description": "Attribute name.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "An alphanumeric identifier for the resource unique to its type.",
							"type": "string"
						},
						"type": {
							"required": false,
							"enum": ["select"],
							"description": "Type of attribute.",
							"type": "string"
						},
						"order_by": {
							"required": false,
							"enum": ["menu_order", "name", "name_num", "id"],
							"description": "Default sort order.",
							"type": "string"
						},
						"has_archives": {
							"required": false,
							"description": "Enable/Disable attribute archives.",
							"type": "boolean"
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": true,
							"description": "Required to be true, as resource does not support trashing.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/products/attributes/batch": {
			"namespace": "wc/v3",
			"methods": ["POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"name": {
							"required": false,
							"description": "Attribute name.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "An alphanumeric identifier for the resource unique to its type.",
							"type": "string"
						},
						"type": {
							"required": false,
							"enum": ["select"],
							"description": "Type of attribute.",
							"type": "string"
						},
						"order_by": {
							"required": false,
							"enum": ["menu_order", "name", "name_num", "id"],
							"description": "Default sort order.",
							"type": "string"
						},
						"has_archives": {
							"required": false,
							"description": "Enable/Disable attribute archives.",
							"type": "boolean"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/products/attributes/batch"
			}
		},
		"/wc/v3/products/categories": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"page": {
							"required": false,
							"default": 1,
							"description": "Current page of the collection.",
							"type": "integer"
						},
						"per_page": {
							"required": false,
							"default": 10,
							"description": "Maximum number of items to be returned in result set.",
							"type": "integer"
						},
						"search": {
							"required": false,
							"description": "Limit results to those matching a string.",
							"type": "string"
						},
						"exclude": {
							"required": false,
							"default": [],
							"description": "Ensure result set excludes specific IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"include": {
							"required": false,
							"default": [],
							"description": "Limit result set to specific ids.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"order": {
							"required": false,
							"default": "asc",
							"enum": ["asc", "desc"],
							"description": "Order sort attribute ascending or descending.",
							"type": "string"
						},
						"orderby": {
							"required": false,
							"default": "name",
							"enum": ["id", "include", "name", "slug", "term_group", "description", "count"],
							"description": "Sort collection by resource attribute.",
							"type": "string"
						},
						"hide_empty": {
							"required": false,
							"default": false,
							"description": "Whether to hide resources not assigned to any products.",
							"type": "boolean"
						},
						"parent": {
							"required": false,
							"description": "Limit result set to resources assigned to a specific parent.",
							"type": "integer"
						},
						"product": {
							"required": false,
							"description": "Limit result set to resources assigned to a specific product.",
							"type": "integer"
						},
						"slug": {
							"required": false,
							"description": "Limit result set to resources with a specific slug.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"name": {
							"required": true,
							"description": "Name for the resource.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "An alphanumeric identifier for the resource unique to its type.",
							"type": "string"
						},
						"parent": {
							"required": false,
							"description": "The ID for the parent of the resource.",
							"type": "integer"
						},
						"description": {
							"required": false,
							"description": "HTML description of the resource.",
							"type": "string"
						},
						"display": {
							"required": false,
							"default": "default",
							"enum": ["default", "products", "subcategories", "both"],
							"description": "Category archive display type.",
							"type": "string"
						},
						"image": {
							"required": false,
							"description": "Image data.",
							"type": "object"
						},
						"menu_order": {
							"required": false,
							"description": "Menu order, used to custom sort the resource.",
							"type": "integer"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/products/categories"
			}
		},
		"/wc/v3/products/categories/(?P<id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"name": {
							"required": false,
							"description": "Category name.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "An alphanumeric identifier for the resource unique to its type.",
							"type": "string"
						},
						"parent": {
							"required": false,
							"description": "The ID for the parent of the resource.",
							"type": "integer"
						},
						"description": {
							"required": false,
							"description": "HTML description of the resource.",
							"type": "string"
						},
						"display": {
							"required": false,
							"enum": ["default", "products", "subcategories", "both"],
							"description": "Category archive display type.",
							"type": "string"
						},
						"image": {
							"required": false,
							"description": "Image data.",
							"type": "object"
						},
						"menu_order": {
							"required": false,
							"description": "Menu order, used to custom sort the resource.",
							"type": "integer"
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Required to be true, as resource does not support trashing.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/products/categories/batch": {
			"namespace": "wc/v3",
			"methods": ["POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"name": {
							"required": false,
							"description": "Category name.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "An alphanumeric identifier for the resource unique to its type.",
							"type": "string"
						},
						"parent": {
							"required": false,
							"description": "The ID for the parent of the resource.",
							"type": "integer"
						},
						"description": {
							"required": false,
							"description": "HTML description of the resource.",
							"type": "string"
						},
						"display": {
							"required": false,
							"enum": ["default", "products", "subcategories", "both"],
							"description": "Category archive display type.",
							"type": "string"
						},
						"image": {
							"required": false,
							"description": "Image data.",
							"type": "object"
						},
						"menu_order": {
							"required": false,
							"description": "Menu order, used to custom sort the resource.",
							"type": "integer"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/products/categories/batch"
			}
		},
		"/wc/v3/products/reviews": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"page": {
							"required": false,
							"default": 1,
							"description": "Current page of the collection.",
							"type": "integer"
						},
						"per_page": {
							"required": false,
							"default": 10,
							"description": "Maximum number of items to be returned in result set.",
							"type": "integer"
						},
						"search": {
							"required": false,
							"description": "Limit results to those matching a string.",
							"type": "string"
						},
						"after": {
							"required": false,
							"description": "Limit response to resources published after a given ISO8601 compliant date.",
							"type": "string"
						},
						"before": {
							"required": false,
							"description": "Limit response to reviews published before a given ISO8601 compliant date.",
							"type": "string"
						},
						"exclude": {
							"required": false,
							"default": [],
							"description": "Ensure result set excludes specific IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"include": {
							"required": false,
							"default": [],
							"description": "Limit result set to specific IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"offset": {
							"required": false,
							"description": "Offset the result set by a specific number of items.",
							"type": "integer"
						},
						"order": {
							"required": false,
							"default": "desc",
							"enum": ["asc", "desc"],
							"description": "Order sort attribute ascending or descending.",
							"type": "string"
						},
						"orderby": {
							"required": false,
							"default": "date_gmt",
							"enum": ["date", "date_gmt", "id", "include", "product"],
							"description": "Sort collection by object attribute.",
							"type": "string"
						},
						"reviewer": {
							"required": false,
							"description": "Limit result set to reviews assigned to specific user IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"reviewer_exclude": {
							"required": false,
							"description": "Ensure result set excludes reviews assigned to specific user IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"reviewer_email": {
							"required": false,
							"description": "Limit result set to that from a specific author email.",
							"type": "string"
						},
						"product": {
							"required": false,
							"default": [],
							"description": "Limit result set to reviews assigned to specific product IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"status": {
							"required": false,
							"default": "approved",
							"enum": ["all", "hold", "approved", "spam", "trash"],
							"description": "Limit result set to reviews assigned a specific status.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"product_id": {
							"required": true,
							"description": "Unique identifier for the product.",
							"type": "integer"
						},
						"status": {
							"required": false,
							"default": "approved",
							"enum": ["approved", "hold", "spam", "unspam", "trash", "untrash"],
							"description": "Status of the review.",
							"type": "string"
						},
						"reviewer": {
							"required": true,
							"description": "Name of the reviewer.",
							"type": "string"
						},
						"reviewer_email": {
							"required": true,
							"description": "Email of the reviewer.",
							"type": "string"
						},
						"review": {
							"required": true,
							"description": "Review content.",
							"type": "string"
						},
						"rating": {
							"required": false,
							"description": "Review rating (0 to 5).",
							"type": "integer"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/products/reviews"
			}
		},
		"/wc/v3/products/reviews/(?P<id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"product_id": {
							"required": false,
							"description": "Unique identifier for the product that the review belongs to.",
							"type": "integer"
						},
						"status": {
							"required": false,
							"enum": ["approved", "hold", "spam", "unspam", "trash", "untrash"],
							"description": "Status of the review.",
							"type": "string"
						},
						"reviewer": {
							"required": false,
							"description": "Reviewer name.",
							"type": "string"
						},
						"reviewer_email": {
							"required": false,
							"description": "Reviewer email.",
							"type": "string"
						},
						"review": {
							"required": false,
							"description": "The content of the review.",
							"type": "string"
						},
						"rating": {
							"required": false,
							"description": "Review rating (0 to 5).",
							"type": "integer"
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Whether to bypass trash and force deletion.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/products/reviews/batch": {
			"namespace": "wc/v3",
			"methods": ["POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"product_id": {
							"required": false,
							"description": "Unique identifier for the product that the review belongs to.",
							"type": "integer"
						},
						"status": {
							"required": false,
							"enum": ["approved", "hold", "spam", "unspam", "trash", "untrash"],
							"description": "Status of the review.",
							"type": "string"
						},
						"reviewer": {
							"required": false,
							"description": "Reviewer name.",
							"type": "string"
						},
						"reviewer_email": {
							"required": false,
							"description": "Reviewer email.",
							"type": "string"
						},
						"review": {
							"required": false,
							"description": "The content of the review.",
							"type": "string"
						},
						"rating": {
							"required": false,
							"description": "Review rating (0 to 5).",
							"type": "integer"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/products/reviews/batch"
			}
		},
		"/wc/v3/products/shipping_classes": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"page": {
							"required": false,
							"default": 1,
							"description": "Current page of the collection.",
							"type": "integer"
						},
						"per_page": {
							"required": false,
							"default": 10,
							"description": "Maximum number of items to be returned in result set.",
							"type": "integer"
						},
						"search": {
							"required": false,
							"description": "Limit results to those matching a string.",
							"type": "string"
						},
						"exclude": {
							"required": false,
							"default": [],
							"description": "Ensure result set excludes specific IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"include": {
							"required": false,
							"default": [],
							"description": "Limit result set to specific ids.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"offset": {
							"required": false,
							"description": "Offset the result set by a specific number of items.",
							"type": "integer"
						},
						"order": {
							"required": false,
							"default": "asc",
							"enum": ["asc", "desc"],
							"description": "Order sort attribute ascending or descending.",
							"type": "string"
						},
						"orderby": {
							"required": false,
							"default": "name",
							"enum": ["id", "include", "name", "slug", "term_group", "description", "count"],
							"description": "Sort collection by resource attribute.",
							"type": "string"
						},
						"hide_empty": {
							"required": false,
							"default": false,
							"description": "Whether to hide resources not assigned to any products.",
							"type": "boolean"
						},
						"product": {
							"required": false,
							"description": "Limit result set to resources assigned to a specific product.",
							"type": "integer"
						},
						"slug": {
							"required": false,
							"description": "Limit result set to resources with a specific slug.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"name": {
							"required": true,
							"description": "Name for the resource.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "An alphanumeric identifier for the resource unique to its type.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "HTML description of the resource.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/products/shipping_classes"
			}
		},
		"/wc/v3/products/shipping_classes/(?P<id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"name": {
							"required": false,
							"description": "Shipping class name.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "An alphanumeric identifier for the resource unique to its type.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "HTML description of the resource.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Required to be true, as resource does not support trashing.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/products/shipping_classes/batch": {
			"namespace": "wc/v3",
			"methods": ["POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"name": {
							"required": false,
							"description": "Shipping class name.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "An alphanumeric identifier for the resource unique to its type.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "HTML description of the resource.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/products/shipping_classes/batch"
			}
		},
		"/wc/v3/products/tags": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"page": {
							"required": false,
							"default": 1,
							"description": "Current page of the collection.",
							"type": "integer"
						},
						"per_page": {
							"required": false,
							"default": 10,
							"description": "Maximum number of items to be returned in result set.",
							"type": "integer"
						},
						"search": {
							"required": false,
							"description": "Limit results to those matching a string.",
							"type": "string"
						},
						"exclude": {
							"required": false,
							"default": [],
							"description": "Ensure result set excludes specific IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"include": {
							"required": false,
							"default": [],
							"description": "Limit result set to specific ids.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"offset": {
							"required": false,
							"description": "Offset the result set by a specific number of items.",
							"type": "integer"
						},
						"order": {
							"required": false,
							"default": "asc",
							"enum": ["asc", "desc"],
							"description": "Order sort attribute ascending or descending.",
							"type": "string"
						},
						"orderby": {
							"required": false,
							"default": "name",
							"enum": ["id", "include", "name", "slug", "term_group", "description", "count"],
							"description": "Sort collection by resource attribute.",
							"type": "string"
						},
						"hide_empty": {
							"required": false,
							"default": false,
							"description": "Whether to hide resources not assigned to any products.",
							"type": "boolean"
						},
						"product": {
							"required": false,
							"description": "Limit result set to resources assigned to a specific product.",
							"type": "integer"
						},
						"slug": {
							"required": false,
							"description": "Limit result set to resources with a specific slug.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"name": {
							"required": true,
							"description": "Name for the resource.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "An alphanumeric identifier for the resource unique to its type.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "HTML description of the resource.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/products/tags"
			}
		},
		"/wc/v3/products/tags/(?P<id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"name": {
							"required": false,
							"description": "Tag name.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "An alphanumeric identifier for the resource unique to its type.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "HTML description of the resource.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Required to be true, as resource does not support trashing.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/products/tags/batch": {
			"namespace": "wc/v3",
			"methods": ["POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"name": {
							"required": false,
							"description": "Tag name.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "An alphanumeric identifier for the resource unique to its type.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "HTML description of the resource.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/products/tags/batch"
			}
		},
		"/wc/v3/products": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"page": {
							"required": false,
							"default": 1,
							"description": "Current page of the collection.",
							"type": "integer"
						},
						"per_page": {
							"required": false,
							"default": 10,
							"description": "Maximum number of items to be returned in result set.",
							"type": "integer"
						},
						"search": {
							"required": false,
							"description": "Limit results to those matching a string.",
							"type": "string"
						},
						"after": {
							"required": false,
							"description": "Limit response to resources published after a given ISO8601 compliant date.",
							"type": "string"
						},
						"before": {
							"required": false,
							"description": "Limit response to resources published before a given ISO8601 compliant date.",
							"type": "string"
						},
						"exclude": {
							"required": false,
							"default": [],
							"description": "Ensure result set excludes specific IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"include": {
							"required": false,
							"default": [],
							"description": "Limit result set to specific ids.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"offset": {
							"required": false,
							"description": "Offset the result set by a specific number of items.",
							"type": "integer"
						},
						"order": {
							"required": false,
							"default": "desc",
							"enum": ["asc", "desc"],
							"description": "Order sort attribute ascending or descending.",
							"type": "string"
						},
						"orderby": {
							"required": false,
							"default": "date",
							"enum": ["date", "id", "include", "title", "slug", "price", "popularity", "rating"],
							"description": "Sort collection by object attribute.",
							"type": "string"
						},
						"parent": {
							"required": false,
							"default": [],
							"description": "Limit result set to those of particular parent IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"parent_exclude": {
							"required": false,
							"default": [],
							"description": "Limit result set to all items except those of a particular parent ID.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"slug": {
							"required": false,
							"description": "Limit result set to products with a specific slug.",
							"type": "string"
						},
						"status": {
							"required": false,
							"default": "any",
							"enum": ["any", "future", "draft", "pending", "private", "publish"],
							"description": "Limit result set to products assigned a specific status.",
							"type": "string"
						},
						"type": {
							"required": false,
							"enum": ["simple", "grouped", "external", "variable"],
							"description": "Limit result set to products assigned a specific type.",
							"type": "string"
						},
						"sku": {
							"required": false,
							"description": "Limit result set to products with specific SKU(s). Use commas to separate.",
							"type": "string"
						},
						"featured": {
							"required": false,
							"description": "Limit result set to featured products.",
							"type": "boolean"
						},
						"category": {
							"required": false,
							"description": "Limit result set to products assigned a specific category ID.",
							"type": "string"
						},
						"tag": {
							"required": false,
							"description": "Limit result set to products assigned a specific tag ID.",
							"type": "string"
						},
						"shipping_class": {
							"required": false,
							"description": "Limit result set to products assigned a specific shipping class ID.",
							"type": "string"
						},
						"attribute": {
							"required": false,
							"description": "Limit result set to products with a specific attribute. Use the taxonomy name/attribute slug.",
							"type": "string"
						},
						"attribute_term": {
							"required": false,
							"description": "Limit result set to products with a specific attribute term ID (required an assigned attribute).",
							"type": "string"
						},
						"tax_class": {
							"required": false,
							"enum": ["standard", "reduced-rate", "zero-rate"],
							"description": "Limit result set to products with a specific tax class.",
							"type": "string"
						},
						"on_sale": {
							"required": false,
							"description": "Limit result set to products on sale.",
							"type": "boolean"
						},
						"min_price": {
							"required": false,
							"description": "Limit result set to products based on a minimum price.",
							"type": "string"
						},
						"max_price": {
							"required": false,
							"description": "Limit result set to products based on a maximum price.",
							"type": "string"
						},
						"stock_status": {
							"required": false,
							"enum": ["instock", "outofstock", "onbackorder"],
							"description": "Limit result set to products with specified stock status.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"name": {
							"required": false,
							"description": "Product name.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "Product slug.",
							"type": "string"
						},
						"date_created": {
							"required": false,
							"description": "The date the product was created, in the site's timezone.",
							"type": "date-time"
						},
						"date_created_gmt": {
							"required": false,
							"description": "The date the product was created, as GMT.",
							"type": "date-time"
						},
						"type": {
							"required": false,
							"default": "simple",
							"enum": ["simple", "grouped", "external", "variable"],
							"description": "Product type.",
							"type": "string"
						},
						"status": {
							"required": false,
							"default": "publish",
							"enum": ["draft", "pending", "private", "publish", "future"],
							"description": "Product status (post status).",
							"type": "string"
						},
						"featured": {
							"required": false,
							"default": false,
							"description": "Featured product.",
							"type": "boolean"
						},
						"catalog_visibility": {
							"required": false,
							"default": "visible",
							"enum": ["visible", "catalog", "search", "hidden"],
							"description": "Catalog visibility.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "Product description.",
							"type": "string"
						},
						"short_description": {
							"required": false,
							"description": "Product short description.",
							"type": "string"
						},
						"sku": {
							"required": false,
							"description": "Unique identifier.",
							"type": "string"
						},
						"regular_price": {
							"required": false,
							"description": "Product regular price.",
							"type": "string"
						},
						"sale_price": {
							"required": false,
							"description": "Product sale price.",
							"type": "string"
						},
						"date_on_sale_from": {
							"required": false,
							"description": "Start date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"date_on_sale_from_gmt": {
							"required": false,
							"description": "Start date of sale price, as GMT.",
							"type": "date-time"
						},
						"date_on_sale_to": {
							"required": false,
							"description": "End date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"date_on_sale_to_gmt": {
							"required": false,
							"description": "End date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"virtual": {
							"required": false,
							"default": false,
							"description": "If the product is virtual.",
							"type": "boolean"
						},
						"downloadable": {
							"required": false,
							"default": false,
							"description": "If the product is downloadable.",
							"type": "boolean"
						},
						"downloads": {
							"required": false,
							"description": "List of downloadable files.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "File ID.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "File name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"file": {
										"description": "File URL.",
										"type": "string",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"download_limit": {
							"required": false,
							"default": -1,
							"description": "Number of times downloadable files can be downloaded after purchase.",
							"type": "integer"
						},
						"download_expiry": {
							"required": false,
							"default": -1,
							"description": "Number of days until access to downloadable files expires.",
							"type": "integer"
						},
						"external_url": {
							"required": false,
							"description": "Product external URL. Only for external products.",
							"type": "string"
						},
						"button_text": {
							"required": false,
							"description": "Product external button text. Only for external products.",
							"type": "string"
						},
						"tax_status": {
							"required": false,
							"default": "taxable",
							"enum": ["taxable", "shipping", "none"],
							"description": "Tax status.",
							"type": "string"
						},
						"tax_class": {
							"required": false,
							"description": "Tax class.",
							"type": "string"
						},
						"manage_stock": {
							"required": false,
							"default": false,
							"description": "Stock management at product level.",
							"type": "boolean"
						},
						"stock_quantity": {
							"required": false,
							"description": "Stock quantity.",
							"type": "integer"
						},
						"stock_status": {
							"required": false,
							"default": "instock",
							"enum": ["instock", "outofstock", "onbackorder"],
							"description": "Controls the stock status of the product.",
							"type": "string"
						},
						"backorders": {
							"required": false,
							"default": "no",
							"enum": ["no", "notify", "yes"],
							"description": "If managing stock, this controls if backorders are allowed.",
							"type": "string"
						},
						"sold_individually": {
							"required": false,
							"default": false,
							"description": "Allow one item to be bought in a single order.",
							"type": "boolean"
						},
						"weight": {
							"required": false,
							"description": "Product weight (kg).",
							"type": "string"
						},
						"dimensions": {
							"required": false,
							"description": "Product dimensions.",
							"type": "object"
						},
						"shipping_class": {
							"required": false,
							"description": "Shipping class slug.",
							"type": "string"
						},
						"reviews_allowed": {
							"required": false,
							"default": true,
							"description": "Allow reviews.",
							"type": "boolean"
						},
						"upsell_ids": {
							"required": false,
							"description": "List of up-sell products IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"cross_sell_ids": {
							"required": false,
							"description": "List of cross-sell products IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"parent_id": {
							"required": false,
							"description": "Product parent ID.",
							"type": "integer"
						},
						"purchase_note": {
							"required": false,
							"description": "Optional note to send the customer after purchase.",
							"type": "string"
						},
						"categories": {
							"required": false,
							"description": "List of categories.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Category ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Category name.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"slug": {
										"description": "Category slug.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									}
								}
							}
						},
						"tags": {
							"required": false,
							"description": "List of tags.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Tag ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Tag name.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"slug": {
										"description": "Tag slug.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									}
								}
							}
						},
						"images": {
							"required": false,
							"description": "List of images.",
							"type": "object",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Image ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"date_created": {
										"description": "The date the image was created, in the site's timezone.",
										"type": "date-time",
										"context": ["view", "edit"],
										"readonly": true
									},
									"date_created_gmt": {
										"description": "The date the image was created, as GMT.",
										"type": "date-time",
										"context": ["view", "edit"],
										"readonly": true
									},
									"date_modified": {
										"description": "The date the image was last modified, in the site's timezone.",
										"type": "date-time",
										"context": ["view", "edit"],
										"readonly": true
									},
									"date_modified_gmt": {
										"description": "The date the image was last modified, as GMT.",
										"type": "date-time",
										"context": ["view", "edit"],
										"readonly": true
									},
									"src": {
										"description": "Image URL.",
										"type": "string",
										"format": "uri",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Image name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"alt": {
										"description": "Image alternative text.",
										"type": "string",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"attributes": {
							"required": false,
							"description": "List of attributes.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Attribute ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Attribute name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"position": {
										"description": "Attribute position.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"visible": {
										"description": "Define if the attribute is visible on the \"Additional information\" tab in the product's page.",
										"type": "boolean",
										"default": false,
										"context": ["view", "edit"]
									},
									"variation": {
										"description": "Define if the attribute can be used as variation.",
										"type": "boolean",
										"default": false,
										"context": ["view", "edit"]
									},
									"options": {
										"description": "List of available term names of the attribute.",
										"type": "array",
										"items": {
											"type": "string"
										},
										"context": ["view", "edit"]
									}
								}
							}
						},
						"default_attributes": {
							"required": false,
							"description": "Defaults variation attributes.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Attribute ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Attribute name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"option": {
										"description": "Selected attribute term name.",
										"type": "string",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"menu_order": {
							"required": false,
							"description": "Menu order, used to custom sort products.",
							"type": "integer"
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/products"
			}
		},
		"/wc/v3/products/(?P<id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"name": {
							"required": false,
							"description": "Product name.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "Product slug.",
							"type": "string"
						},
						"date_created": {
							"required": false,
							"description": "The date the product was created, in the site's timezone.",
							"type": "date-time"
						},
						"date_created_gmt": {
							"required": false,
							"description": "The date the product was created, as GMT.",
							"type": "date-time"
						},
						"type": {
							"required": false,
							"enum": ["simple", "grouped", "external", "variable"],
							"description": "Product type.",
							"type": "string"
						},
						"status": {
							"required": false,
							"enum": ["draft", "pending", "private", "publish", "future"],
							"description": "Product status (post status).",
							"type": "string"
						},
						"featured": {
							"required": false,
							"description": "Featured product.",
							"type": "boolean"
						},
						"catalog_visibility": {
							"required": false,
							"enum": ["visible", "catalog", "search", "hidden"],
							"description": "Catalog visibility.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "Product description.",
							"type": "string"
						},
						"short_description": {
							"required": false,
							"description": "Product short description.",
							"type": "string"
						},
						"sku": {
							"required": false,
							"description": "Unique identifier.",
							"type": "string"
						},
						"regular_price": {
							"required": false,
							"description": "Product regular price.",
							"type": "string"
						},
						"sale_price": {
							"required": false,
							"description": "Product sale price.",
							"type": "string"
						},
						"date_on_sale_from": {
							"required": false,
							"description": "Start date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"date_on_sale_from_gmt": {
							"required": false,
							"description": "Start date of sale price, as GMT.",
							"type": "date-time"
						},
						"date_on_sale_to": {
							"required": false,
							"description": "End date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"date_on_sale_to_gmt": {
							"required": false,
							"description": "End date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"virtual": {
							"required": false,
							"description": "If the product is virtual.",
							"type": "boolean"
						},
						"downloadable": {
							"required": false,
							"description": "If the product is downloadable.",
							"type": "boolean"
						},
						"downloads": {
							"required": false,
							"description": "List of downloadable files.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "File ID.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "File name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"file": {
										"description": "File URL.",
										"type": "string",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"download_limit": {
							"required": false,
							"description": "Number of times downloadable files can be downloaded after purchase.",
							"type": "integer"
						},
						"download_expiry": {
							"required": false,
							"description": "Number of days until access to downloadable files expires.",
							"type": "integer"
						},
						"external_url": {
							"required": false,
							"description": "Product external URL. Only for external products.",
							"type": "string"
						},
						"button_text": {
							"required": false,
							"description": "Product external button text. Only for external products.",
							"type": "string"
						},
						"tax_status": {
							"required": false,
							"enum": ["taxable", "shipping", "none"],
							"description": "Tax status.",
							"type": "string"
						},
						"tax_class": {
							"required": false,
							"description": "Tax class.",
							"type": "string"
						},
						"manage_stock": {
							"required": false,
							"description": "Stock management at product level.",
							"type": "boolean"
						},
						"stock_quantity": {
							"required": false,
							"description": "Stock quantity.",
							"type": "integer"
						},
						"stock_status": {
							"required": false,
							"enum": ["instock", "outofstock", "onbackorder"],
							"description": "Controls the stock status of the product.",
							"type": "string"
						},
						"backorders": {
							"required": false,
							"enum": ["no", "notify", "yes"],
							"description": "If managing stock, this controls if backorders are allowed.",
							"type": "string"
						},
						"sold_individually": {
							"required": false,
							"description": "Allow one item to be bought in a single order.",
							"type": "boolean"
						},
						"weight": {
							"required": false,
							"description": "Product weight (kg).",
							"type": "string"
						},
						"dimensions": {
							"required": false,
							"description": "Product dimensions.",
							"type": "object"
						},
						"shipping_class": {
							"required": false,
							"description": "Shipping class slug.",
							"type": "string"
						},
						"reviews_allowed": {
							"required": false,
							"description": "Allow reviews.",
							"type": "boolean"
						},
						"upsell_ids": {
							"required": false,
							"description": "List of up-sell products IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"cross_sell_ids": {
							"required": false,
							"description": "List of cross-sell products IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"parent_id": {
							"required": false,
							"description": "Product parent ID.",
							"type": "integer"
						},
						"purchase_note": {
							"required": false,
							"description": "Optional note to send the customer after purchase.",
							"type": "string"
						},
						"categories": {
							"required": false,
							"description": "List of categories.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Category ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Category name.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"slug": {
										"description": "Category slug.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									}
								}
							}
						},
						"tags": {
							"required": false,
							"description": "List of tags.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Tag ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Tag name.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"slug": {
										"description": "Tag slug.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									}
								}
							}
						},
						"images": {
							"required": false,
							"description": "List of images.",
							"type": "object",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Image ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"date_created": {
										"description": "The date the image was created, in the site's timezone.",
										"type": "date-time",
										"context": ["view", "edit"],
										"readonly": true
									},
									"date_created_gmt": {
										"description": "The date the image was created, as GMT.",
										"type": "date-time",
										"context": ["view", "edit"],
										"readonly": true
									},
									"date_modified": {
										"description": "The date the image was last modified, in the site's timezone.",
										"type": "date-time",
										"context": ["view", "edit"],
										"readonly": true
									},
									"date_modified_gmt": {
										"description": "The date the image was last modified, as GMT.",
										"type": "date-time",
										"context": ["view", "edit"],
										"readonly": true
									},
									"src": {
										"description": "Image URL.",
										"type": "string",
										"format": "uri",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Image name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"alt": {
										"description": "Image alternative text.",
										"type": "string",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"attributes": {
							"required": false,
							"description": "List of attributes.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Attribute ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Attribute name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"position": {
										"description": "Attribute position.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"visible": {
										"description": "Define if the attribute is visible on the \"Additional information\" tab in the product's page.",
										"type": "boolean",
										"default": false,
										"context": ["view", "edit"]
									},
									"variation": {
										"description": "Define if the attribute can be used as variation.",
										"type": "boolean",
										"default": false,
										"context": ["view", "edit"]
									},
									"options": {
										"description": "List of available term names of the attribute.",
										"type": "array",
										"items": {
											"type": "string"
										},
										"context": ["view", "edit"]
									}
								}
							}
						},
						"default_attributes": {
							"required": false,
							"description": "Defaults variation attributes.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Attribute ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Attribute name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"option": {
										"description": "Selected attribute term name.",
										"type": "string",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"menu_order": {
							"required": false,
							"description": "Menu order, used to custom sort products.",
							"type": "integer"
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Whether to bypass trash and force deletion.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/products/batch": {
			"namespace": "wc/v3",
			"methods": ["POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"name": {
							"required": false,
							"description": "Product name.",
							"type": "string"
						},
						"slug": {
							"required": false,
							"description": "Product slug.",
							"type": "string"
						},
						"date_created": {
							"required": false,
							"description": "The date the product was created, in the site's timezone.",
							"type": "date-time"
						},
						"date_created_gmt": {
							"required": false,
							"description": "The date the product was created, as GMT.",
							"type": "date-time"
						},
						"type": {
							"required": false,
							"enum": ["simple", "grouped", "external", "variable"],
							"description": "Product type.",
							"type": "string"
						},
						"status": {
							"required": false,
							"enum": ["draft", "pending", "private", "publish", "future"],
							"description": "Product status (post status).",
							"type": "string"
						},
						"featured": {
							"required": false,
							"description": "Featured product.",
							"type": "boolean"
						},
						"catalog_visibility": {
							"required": false,
							"enum": ["visible", "catalog", "search", "hidden"],
							"description": "Catalog visibility.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "Product description.",
							"type": "string"
						},
						"short_description": {
							"required": false,
							"description": "Product short description.",
							"type": "string"
						},
						"sku": {
							"required": false,
							"description": "Unique identifier.",
							"type": "string"
						},
						"regular_price": {
							"required": false,
							"description": "Product regular price.",
							"type": "string"
						},
						"sale_price": {
							"required": false,
							"description": "Product sale price.",
							"type": "string"
						},
						"date_on_sale_from": {
							"required": false,
							"description": "Start date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"date_on_sale_from_gmt": {
							"required": false,
							"description": "Start date of sale price, as GMT.",
							"type": "date-time"
						},
						"date_on_sale_to": {
							"required": false,
							"description": "End date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"date_on_sale_to_gmt": {
							"required": false,
							"description": "End date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"virtual": {
							"required": false,
							"description": "If the product is virtual.",
							"type": "boolean"
						},
						"downloadable": {
							"required": false,
							"description": "If the product is downloadable.",
							"type": "boolean"
						},
						"downloads": {
							"required": false,
							"description": "List of downloadable files.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "File ID.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "File name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"file": {
										"description": "File URL.",
										"type": "string",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"download_limit": {
							"required": false,
							"description": "Number of times downloadable files can be downloaded after purchase.",
							"type": "integer"
						},
						"download_expiry": {
							"required": false,
							"description": "Number of days until access to downloadable files expires.",
							"type": "integer"
						},
						"external_url": {
							"required": false,
							"description": "Product external URL. Only for external products.",
							"type": "string"
						},
						"button_text": {
							"required": false,
							"description": "Product external button text. Only for external products.",
							"type": "string"
						},
						"tax_status": {
							"required": false,
							"enum": ["taxable", "shipping", "none"],
							"description": "Tax status.",
							"type": "string"
						},
						"tax_class": {
							"required": false,
							"description": "Tax class.",
							"type": "string"
						},
						"manage_stock": {
							"required": false,
							"description": "Stock management at product level.",
							"type": "boolean"
						},
						"stock_quantity": {
							"required": false,
							"description": "Stock quantity.",
							"type": "integer"
						},
						"stock_status": {
							"required": false,
							"enum": ["instock", "outofstock", "onbackorder"],
							"description": "Controls the stock status of the product.",
							"type": "string"
						},
						"backorders": {
							"required": false,
							"enum": ["no", "notify", "yes"],
							"description": "If managing stock, this controls if backorders are allowed.",
							"type": "string"
						},
						"sold_individually": {
							"required": false,
							"description": "Allow one item to be bought in a single order.",
							"type": "boolean"
						},
						"weight": {
							"required": false,
							"description": "Product weight (kg).",
							"type": "string"
						},
						"dimensions": {
							"required": false,
							"description": "Product dimensions.",
							"type": "object"
						},
						"shipping_class": {
							"required": false,
							"description": "Shipping class slug.",
							"type": "string"
						},
						"reviews_allowed": {
							"required": false,
							"description": "Allow reviews.",
							"type": "boolean"
						},
						"upsell_ids": {
							"required": false,
							"description": "List of up-sell products IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"cross_sell_ids": {
							"required": false,
							"description": "List of cross-sell products IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"parent_id": {
							"required": false,
							"description": "Product parent ID.",
							"type": "integer"
						},
						"purchase_note": {
							"required": false,
							"description": "Optional note to send the customer after purchase.",
							"type": "string"
						},
						"categories": {
							"required": false,
							"description": "List of categories.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Category ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Category name.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"slug": {
										"description": "Category slug.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									}
								}
							}
						},
						"tags": {
							"required": false,
							"description": "List of tags.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Tag ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Tag name.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									},
									"slug": {
										"description": "Tag slug.",
										"type": "string",
										"context": ["view", "edit"],
										"readonly": true
									}
								}
							}
						},
						"images": {
							"required": false,
							"description": "List of images.",
							"type": "object",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Image ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"date_created": {
										"description": "The date the image was created, in the site's timezone.",
										"type": "date-time",
										"context": ["view", "edit"],
										"readonly": true
									},
									"date_created_gmt": {
										"description": "The date the image was created, as GMT.",
										"type": "date-time",
										"context": ["view", "edit"],
										"readonly": true
									},
									"date_modified": {
										"description": "The date the image was last modified, in the site's timezone.",
										"type": "date-time",
										"context": ["view", "edit"],
										"readonly": true
									},
									"date_modified_gmt": {
										"description": "The date the image was last modified, as GMT.",
										"type": "date-time",
										"context": ["view", "edit"],
										"readonly": true
									},
									"src": {
										"description": "Image URL.",
										"type": "string",
										"format": "uri",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Image name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"alt": {
										"description": "Image alternative text.",
										"type": "string",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"attributes": {
							"required": false,
							"description": "List of attributes.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Attribute ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Attribute name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"position": {
										"description": "Attribute position.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"visible": {
										"description": "Define if the attribute is visible on the \"Additional information\" tab in the product's page.",
										"type": "boolean",
										"default": false,
										"context": ["view", "edit"]
									},
									"variation": {
										"description": "Define if the attribute can be used as variation.",
										"type": "boolean",
										"default": false,
										"context": ["view", "edit"]
									},
									"options": {
										"description": "List of available term names of the attribute.",
										"type": "array",
										"items": {
											"type": "string"
										},
										"context": ["view", "edit"]
									}
								}
							}
						},
						"default_attributes": {
							"required": false,
							"description": "Defaults variation attributes.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Attribute ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Attribute name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"option": {
										"description": "Selected attribute term name.",
										"type": "string",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"menu_order": {
							"required": false,
							"description": "Menu order, used to custom sort products.",
							"type": "integer"
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/products/batch"
			}
		},
		"/wc/v3/products/(?P<product_id>[\\d]+)/variations": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"product_id": {
							"required": false,
							"description": "Unique identifier for the variable product.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"page": {
							"required": false,
							"default": 1,
							"description": "Current page of the collection.",
							"type": "integer"
						},
						"per_page": {
							"required": false,
							"default": 10,
							"description": "Maximum number of items to be returned in result set.",
							"type": "integer"
						},
						"search": {
							"required": false,
							"description": "Limit results to those matching a string.",
							"type": "string"
						},
						"after": {
							"required": false,
							"description": "Limit response to resources published after a given ISO8601 compliant date.",
							"type": "string"
						},
						"before": {
							"required": false,
							"description": "Limit response to resources published before a given ISO8601 compliant date.",
							"type": "string"
						},
						"exclude": {
							"required": false,
							"default": [],
							"description": "Ensure result set excludes specific IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"include": {
							"required": false,
							"default": [],
							"description": "Limit result set to specific ids.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"offset": {
							"required": false,
							"description": "Offset the result set by a specific number of items.",
							"type": "integer"
						},
						"order": {
							"required": false,
							"default": "desc",
							"enum": ["asc", "desc"],
							"description": "Order sort attribute ascending or descending.",
							"type": "string"
						},
						"orderby": {
							"required": false,
							"default": "date",
							"enum": ["date", "id", "include", "title", "slug"],
							"description": "Sort collection by object attribute.",
							"type": "string"
						},
						"parent": {
							"required": false,
							"default": [],
							"description": "Limit result set to those of particular parent IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"parent_exclude": {
							"required": false,
							"default": [],
							"description": "Limit result set to all items except those of a particular parent ID.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"slug": {
							"required": false,
							"description": "Limit result set to products with a specific slug.",
							"type": "string"
						},
						"status": {
							"required": false,
							"default": "any",
							"enum": ["any", "future", "draft", "pending", "private", "publish"],
							"description": "Limit result set to products assigned a specific status.",
							"type": "string"
						},
						"sku": {
							"required": false,
							"description": "Limit result set to products with specific SKU(s). Use commas to separate.",
							"type": "string"
						},
						"tax_class": {
							"required": false,
							"enum": ["standard", "reduced-rate", "zero-rate"],
							"description": "Limit result set to products with a specific tax class.",
							"type": "string"
						},
						"on_sale": {
							"required": false,
							"description": "Limit result set to products on sale.",
							"type": "boolean"
						},
						"min_price": {
							"required": false,
							"description": "Limit result set to products based on a minimum price.",
							"type": "string"
						},
						"max_price": {
							"required": false,
							"description": "Limit result set to products based on a maximum price.",
							"type": "string"
						},
						"stock_status": {
							"required": false,
							"enum": ["instock", "outofstock", "onbackorder"],
							"description": "Limit result set to products with specified stock status.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"product_id": {
							"required": false,
							"description": "Unique identifier for the variable product.",
							"type": "integer"
						},
						"description": {
							"required": false,
							"description": "Variation description.",
							"type": "string"
						},
						"sku": {
							"required": false,
							"description": "Unique identifier.",
							"type": "string"
						},
						"regular_price": {
							"required": false,
							"description": "Variation regular price.",
							"type": "string"
						},
						"sale_price": {
							"required": false,
							"description": "Variation sale price.",
							"type": "string"
						},
						"date_on_sale_from": {
							"required": false,
							"description": "Start date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"date_on_sale_from_gmt": {
							"required": false,
							"description": "Start date of sale price, as GMT.",
							"type": "date-time"
						},
						"date_on_sale_to": {
							"required": false,
							"description": "End date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"date_on_sale_to_gmt": {
							"required": false,
							"description": "End date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"status": {
							"required": false,
							"default": "publish",
							"enum": ["draft", "pending", "private", "publish"],
							"description": "Variation status.",
							"type": "string"
						},
						"virtual": {
							"required": false,
							"default": false,
							"description": "If the variation is virtual.",
							"type": "boolean"
						},
						"downloadable": {
							"required": false,
							"default": false,
							"description": "If the variation is downloadable.",
							"type": "boolean"
						},
						"downloads": {
							"required": false,
							"description": "List of downloadable files.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "File ID.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "File name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"file": {
										"description": "File URL.",
										"type": "string",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"download_limit": {
							"required": false,
							"default": -1,
							"description": "Number of times downloadable files can be downloaded after purchase.",
							"type": "integer"
						},
						"download_expiry": {
							"required": false,
							"default": -1,
							"description": "Number of days until access to downloadable files expires.",
							"type": "integer"
						},
						"tax_status": {
							"required": false,
							"default": "taxable",
							"enum": ["taxable", "shipping", "none"],
							"description": "Tax status.",
							"type": "string"
						},
						"tax_class": {
							"required": false,
							"description": "Tax class.",
							"type": "string"
						},
						"manage_stock": {
							"required": false,
							"default": false,
							"description": "Stock management at variation level.",
							"type": "boolean"
						},
						"stock_quantity": {
							"required": false,
							"description": "Stock quantity.",
							"type": "integer"
						},
						"stock_status": {
							"required": false,
							"default": "instock",
							"enum": ["instock", "outofstock", "onbackorder"],
							"description": "Controls the stock status of the product.",
							"type": "string"
						},
						"backorders": {
							"required": false,
							"default": "no",
							"enum": ["no", "notify", "yes"],
							"description": "If managing stock, this controls if backorders are allowed.",
							"type": "string"
						},
						"weight": {
							"required": false,
							"description": "Variation weight (kg).",
							"type": "string"
						},
						"dimensions": {
							"required": false,
							"description": "Variation dimensions.",
							"type": "object"
						},
						"shipping_class": {
							"required": false,
							"description": "Shipping class slug.",
							"type": "string"
						},
						"image": {
							"required": false,
							"description": "Variation image data.",
							"type": "object"
						},
						"attributes": {
							"required": false,
							"description": "List of attributes.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Attribute ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Attribute name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"option": {
										"description": "Selected attribute term name.",
										"type": "string",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"menu_order": {
							"required": false,
							"description": "Menu order, used to custom sort products.",
							"type": "integer"
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						}
					}
				}
			]
		},
		"/wc/v3/products/(?P<product_id>[\\d]+)/variations/(?P<id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"product_id": {
							"required": false,
							"description": "Unique identifier for the variable product.",
							"type": "integer"
						},
						"id": {
							"required": false,
							"description": "Unique identifier for the variation.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"product_id": {
							"required": false,
							"description": "Unique identifier for the variable product.",
							"type": "integer"
						},
						"id": {
							"required": false,
							"description": "Unique identifier for the variation.",
							"type": "integer"
						},
						"description": {
							"required": false,
							"description": "Variation description.",
							"type": "string"
						},
						"sku": {
							"required": false,
							"description": "Unique identifier.",
							"type": "string"
						},
						"regular_price": {
							"required": false,
							"description": "Variation regular price.",
							"type": "string"
						},
						"sale_price": {
							"required": false,
							"description": "Variation sale price.",
							"type": "string"
						},
						"date_on_sale_from": {
							"required": false,
							"description": "Start date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"date_on_sale_from_gmt": {
							"required": false,
							"description": "Start date of sale price, as GMT.",
							"type": "date-time"
						},
						"date_on_sale_to": {
							"required": false,
							"description": "End date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"date_on_sale_to_gmt": {
							"required": false,
							"description": "End date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"status": {
							"required": false,
							"enum": ["draft", "pending", "private", "publish"],
							"description": "Variation status.",
							"type": "string"
						},
						"virtual": {
							"required": false,
							"description": "If the variation is virtual.",
							"type": "boolean"
						},
						"downloadable": {
							"required": false,
							"description": "If the variation is downloadable.",
							"type": "boolean"
						},
						"downloads": {
							"required": false,
							"description": "List of downloadable files.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "File ID.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "File name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"file": {
										"description": "File URL.",
										"type": "string",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"download_limit": {
							"required": false,
							"description": "Number of times downloadable files can be downloaded after purchase.",
							"type": "integer"
						},
						"download_expiry": {
							"required": false,
							"description": "Number of days until access to downloadable files expires.",
							"type": "integer"
						},
						"tax_status": {
							"required": false,
							"enum": ["taxable", "shipping", "none"],
							"description": "Tax status.",
							"type": "string"
						},
						"tax_class": {
							"required": false,
							"description": "Tax class.",
							"type": "string"
						},
						"manage_stock": {
							"required": false,
							"description": "Stock management at variation level.",
							"type": "boolean"
						},
						"stock_quantity": {
							"required": false,
							"description": "Stock quantity.",
							"type": "integer"
						},
						"stock_status": {
							"required": false,
							"enum": ["instock", "outofstock", "onbackorder"],
							"description": "Controls the stock status of the product.",
							"type": "string"
						},
						"backorders": {
							"required": false,
							"enum": ["no", "notify", "yes"],
							"description": "If managing stock, this controls if backorders are allowed.",
							"type": "string"
						},
						"weight": {
							"required": false,
							"description": "Variation weight (kg).",
							"type": "string"
						},
						"dimensions": {
							"required": false,
							"description": "Variation dimensions.",
							"type": "object"
						},
						"shipping_class": {
							"required": false,
							"description": "Shipping class slug.",
							"type": "string"
						},
						"image": {
							"required": false,
							"description": "Variation image data.",
							"type": "object"
						},
						"attributes": {
							"required": false,
							"description": "List of attributes.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Attribute ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Attribute name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"option": {
										"description": "Selected attribute term name.",
										"type": "string",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"menu_order": {
							"required": false,
							"description": "Menu order, used to custom sort products.",
							"type": "integer"
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"product_id": {
							"required": false,
							"description": "Unique identifier for the variable product.",
							"type": "integer"
						},
						"id": {
							"required": false,
							"description": "Unique identifier for the variation.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Whether to bypass trash and force deletion.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/products/(?P<product_id>[\\d]+)/variations/batch": {
			"namespace": "wc/v3",
			"methods": ["POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"product_id": {
							"required": false,
							"description": "Unique identifier for the variable product.",
							"type": "integer"
						},
						"description": {
							"required": false,
							"description": "Variation description.",
							"type": "string"
						},
						"sku": {
							"required": false,
							"description": "Unique identifier.",
							"type": "string"
						},
						"regular_price": {
							"required": false,
							"description": "Variation regular price.",
							"type": "string"
						},
						"sale_price": {
							"required": false,
							"description": "Variation sale price.",
							"type": "string"
						},
						"date_on_sale_from": {
							"required": false,
							"description": "Start date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"date_on_sale_from_gmt": {
							"required": false,
							"description": "Start date of sale price, as GMT.",
							"type": "date-time"
						},
						"date_on_sale_to": {
							"required": false,
							"description": "End date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"date_on_sale_to_gmt": {
							"required": false,
							"description": "End date of sale price, in the site's timezone.",
							"type": "date-time"
						},
						"status": {
							"required": false,
							"enum": ["draft", "pending", "private", "publish"],
							"description": "Variation status.",
							"type": "string"
						},
						"virtual": {
							"required": false,
							"description": "If the variation is virtual.",
							"type": "boolean"
						},
						"downloadable": {
							"required": false,
							"description": "If the variation is downloadable.",
							"type": "boolean"
						},
						"downloads": {
							"required": false,
							"description": "List of downloadable files.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "File ID.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "File name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"file": {
										"description": "File URL.",
										"type": "string",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"download_limit": {
							"required": false,
							"description": "Number of times downloadable files can be downloaded after purchase.",
							"type": "integer"
						},
						"download_expiry": {
							"required": false,
							"description": "Number of days until access to downloadable files expires.",
							"type": "integer"
						},
						"tax_status": {
							"required": false,
							"enum": ["taxable", "shipping", "none"],
							"description": "Tax status.",
							"type": "string"
						},
						"tax_class": {
							"required": false,
							"description": "Tax class.",
							"type": "string"
						},
						"manage_stock": {
							"required": false,
							"description": "Stock management at variation level.",
							"type": "boolean"
						},
						"stock_quantity": {
							"required": false,
							"description": "Stock quantity.",
							"type": "integer"
						},
						"stock_status": {
							"required": false,
							"enum": ["instock", "outofstock", "onbackorder"],
							"description": "Controls the stock status of the product.",
							"type": "string"
						},
						"backorders": {
							"required": false,
							"enum": ["no", "notify", "yes"],
							"description": "If managing stock, this controls if backorders are allowed.",
							"type": "string"
						},
						"weight": {
							"required": false,
							"description": "Variation weight (kg).",
							"type": "string"
						},
						"dimensions": {
							"required": false,
							"description": "Variation dimensions.",
							"type": "object"
						},
						"shipping_class": {
							"required": false,
							"description": "Shipping class slug.",
							"type": "string"
						},
						"image": {
							"required": false,
							"description": "Variation image data.",
							"type": "object"
						},
						"attributes": {
							"required": false,
							"description": "List of attributes.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Attribute ID.",
										"type": "integer",
										"context": ["view", "edit"]
									},
									"name": {
										"description": "Attribute name.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"option": {
										"description": "Selected attribute term name.",
										"type": "string",
										"context": ["view", "edit"]
									}
								}
							}
						},
						"menu_order": {
							"required": false,
							"description": "Menu order, used to custom sort products.",
							"type": "integer"
						},
						"meta_data": {
							"required": false,
							"description": "Meta data.",
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"description": "Meta ID.",
										"type": "integer",
										"context": ["view", "edit"],
										"readonly": true
									},
									"key": {
										"description": "Meta key.",
										"type": "string",
										"context": ["view", "edit"]
									},
									"value": {
										"description": "Meta value.",
										"type": "mixed",
										"context": ["view", "edit"]
									}
								}
							}
						}
					}
				}
			]
		},
		"/wc/v3/reports/sales": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"period": {
							"required": false,
							"enum": ["week", "month", "last_month", "year"],
							"description": "Report period.",
							"type": "string"
						},
						"date_min": {
							"required": false,
							"description": "Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.",
							"type": "string"
						},
						"date_max": {
							"required": false,
							"description": "Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/reports/sales"
			}
		},
		"/wc/v3/reports/top_sellers": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"period": {
							"required": false,
							"enum": ["week", "month", "last_month", "year"],
							"description": "Report period.",
							"type": "string"
						},
						"date_min": {
							"required": false,
							"description": "Return sales for a specific start date, the date need to be in the YYYY-MM-DD format.",
							"type": "string"
						},
						"date_max": {
							"required": false,
							"description": "Return sales for a specific end date, the date need to be in the YYYY-MM-DD format.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/reports/top_sellers"
			}
		},
		"/wc/v3/reports/orders/totals": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/reports/orders/totals"
			}
		},
		"/wc/v3/reports/products/totals": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/reports/products/totals"
			}
		},
		"/wc/v3/reports/customers/totals": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/reports/customers/totals"
			}
		},
		"/wc/v3/reports/coupons/totals": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/reports/coupons/totals"
			}
		},
		"/wc/v3/reports/reviews/totals": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/reports/reviews/totals"
			}
		},
		"/wc/v3/reports": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/reports"
			}
		},
		"/wc/v3/settings": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": []
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/settings"
			}
		},
		"/wc/v3/settings/batch": {
			"namespace": "wc/v3",
			"methods": ["POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": []
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/settings/batch"
			}
		},
		"/wc/v3/settings/(?P<group_id>[\\w-]+)": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"group": {
							"required": false,
							"description": "Settings group ID.",
							"type": "string"
						}
					}
				}
			]
		},
		"/wc/v3/settings/(?P<group_id>[\\w-]+)/batch": {
			"namespace": "wc/v3",
			"methods": ["POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"group": {
							"required": false,
							"description": "Settings group ID.",
							"type": "string"
						},
						"value": {
							"required": false,
							"description": "Setting value.",
							"type": "mixed"
						}
					}
				}
			]
		},
		"/wc/v3/settings/(?P<group_id>[\\w-]+)/(?P<id>[\\w-]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"group": {
							"required": false,
							"description": "Settings group ID.",
							"type": "string"
						},
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"group": {
							"required": false,
							"description": "Settings group ID.",
							"type": "string"
						},
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "string"
						},
						"value": {
							"required": false,
							"description": "Setting value.",
							"type": "mixed"
						}
					}
				}
			]
		},
		"/wc/v3/shipping/zones": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": []
				},
				{
					"methods": ["POST"],
					"args": {
						"name": {
							"required": true,
							"description": "Shipping zone name.",
							"type": "string"
						},
						"order": {
							"required": false,
							"description": "Shipping zone order.",
							"type": "integer"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/shipping/zones"
			}
		},
		"/wc/v3/shipping/zones/(?P<id>[\\d-]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique ID for the resource.",
							"type": "integer"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique ID for the resource.",
							"type": "integer"
						},
						"name": {
							"required": false,
							"description": "Shipping zone name.",
							"type": "string"
						},
						"order": {
							"required": false,
							"description": "Shipping zone order.",
							"type": "integer"
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique ID for the resource.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Whether to bypass trash and force deletion.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/shipping/zones/(?P<id>[\\d]+)/locations": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique ID for the resource.",
							"type": "integer"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique ID for the resource.",
							"type": "integer"
						},
						"code": {
							"required": false,
							"description": "Shipping zone location code.",
							"type": "string"
						},
						"type": {
							"required": false,
							"enum": ["postcode", "state", "country", "continent"],
							"description": "Shipping zone location type.",
							"type": "string"
						}
					}
				}
			]
		},
		"/wc/v3/shipping/zones/(?P<zone_id>[\\d]+)/methods": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"zone_id": {
							"required": false,
							"description": "Unique ID for the zone.",
							"type": "integer"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"zone_id": {
							"required": false,
							"description": "Unique ID for the zone.",
							"type": "integer"
						},
						"order": {
							"required": false,
							"description": "Shipping method sort order.",
							"type": "integer"
						},
						"enabled": {
							"required": false,
							"description": "Shipping method enabled status.",
							"type": "boolean"
						},
						"settings": {
							"required": false,
							"description": "Shipping method settings.",
							"type": "object"
						},
						"method_id": {
							"required": true,
							"description": "Shipping method ID."
						}
					}
				}
			]
		},
		"/wc/v3/shipping/zones/(?P<zone_id>[\\d]+)/methods/(?P<instance_id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"zone_id": {
							"required": false,
							"description": "Unique ID for the zone.",
							"type": "integer"
						},
						"instance_id": {
							"required": false,
							"description": "Unique ID for the instance.",
							"type": "integer"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"zone_id": {
							"required": false,
							"description": "Unique ID for the zone.",
							"type": "integer"
						},
						"instance_id": {
							"required": false,
							"description": "Unique ID for the instance.",
							"type": "integer"
						},
						"order": {
							"required": false,
							"description": "Shipping method sort order.",
							"type": "integer"
						},
						"enabled": {
							"required": false,
							"description": "Shipping method enabled status.",
							"type": "boolean"
						},
						"settings": {
							"required": false,
							"description": "Shipping method settings.",
							"type": "object"
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"zone_id": {
							"required": false,
							"description": "Unique ID for the zone.",
							"type": "integer"
						},
						"instance_id": {
							"required": false,
							"description": "Unique ID for the instance.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Whether to bypass trash and force deletion.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/taxes/classes": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"name": {
							"required": true,
							"description": "Tax class name.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/taxes/classes"
			}
		},
		"/wc/v3/taxes/classes/(?P<slug>\\w[\\w\\s\\-]*)": {
			"namespace": "wc/v3",
			"methods": ["DELETE"],
			"endpoints": [
				{
					"methods": ["DELETE"],
					"args": {
						"slug": {
							"required": false,
							"description": "Unique slug for the resource.",
							"type": "string"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Required to be true, as resource does not support trashing.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/taxes": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"page": {
							"required": false,
							"default": 1,
							"description": "Current page of the collection.",
							"type": "integer"
						},
						"per_page": {
							"required": false,
							"default": 10,
							"description": "Maximum number of items to be returned in result set.",
							"type": "integer"
						},
						"offset": {
							"required": false,
							"description": "Offset the result set by a specific number of items.",
							"type": "integer"
						},
						"order": {
							"required": false,
							"default": "asc",
							"enum": ["asc", "desc"],
							"description": "Order sort attribute ascending or descending.",
							"type": "string"
						},
						"orderby": {
							"required": false,
							"default": "order",
							"enum": ["id", "order"],
							"description": "Sort collection by object attribute.",
							"type": "string"
						},
						"class": {
							"required": false,
							"enum": ["standard", "reduced-rate", "zero-rate"],
							"description": "Sort by tax class.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"country": {
							"required": false,
							"description": "Country ISO 3166 code.",
							"type": "string"
						},
						"state": {
							"required": false,
							"description": "State code.",
							"type": "string"
						},
						"postcode": {
							"required": false,
							"description": "Postcode / ZIP.",
							"type": "string"
						},
						"city": {
							"required": false,
							"description": "City name.",
							"type": "string"
						},
						"rate": {
							"required": false,
							"description": "Tax rate.",
							"type": "string"
						},
						"name": {
							"required": false,
							"description": "Tax rate name.",
							"type": "string"
						},
						"priority": {
							"required": false,
							"default": 1,
							"description": "Tax priority.",
							"type": "integer"
						},
						"compound": {
							"required": false,
							"default": false,
							"description": "Whether or not this is a compound rate.",
							"type": "boolean"
						},
						"shipping": {
							"required": false,
							"default": true,
							"description": "Whether or not this tax rate also gets applied to shipping.",
							"type": "boolean"
						},
						"order": {
							"required": false,
							"description": "Indicates the order that will appear in queries.",
							"type": "integer"
						},
						"class": {
							"required": false,
							"default": "standard",
							"enum": ["standard", "reduced-rate", "zero-rate"],
							"description": "Tax class.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/taxes"
			}
		},
		"/wc/v3/taxes/(?P<id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"country": {
							"required": false,
							"description": "Country ISO 3166 code.",
							"type": "string"
						},
						"state": {
							"required": false,
							"description": "State code.",
							"type": "string"
						},
						"postcode": {
							"required": false,
							"description": "Postcode / ZIP.",
							"type": "string"
						},
						"city": {
							"required": false,
							"description": "City name.",
							"type": "string"
						},
						"rate": {
							"required": false,
							"description": "Tax rate.",
							"type": "string"
						},
						"name": {
							"required": false,
							"description": "Tax rate name.",
							"type": "string"
						},
						"priority": {
							"required": false,
							"description": "Tax priority.",
							"type": "integer"
						},
						"compound": {
							"required": false,
							"description": "Whether or not this is a compound rate.",
							"type": "boolean"
						},
						"shipping": {
							"required": false,
							"description": "Whether or not this tax rate also gets applied to shipping.",
							"type": "boolean"
						},
						"order": {
							"required": false,
							"description": "Indicates the order that will appear in queries.",
							"type": "integer"
						},
						"class": {
							"required": false,
							"enum": ["standard", "reduced-rate", "zero-rate"],
							"description": "Tax class.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Required to be true, as resource does not support trashing.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/taxes/batch": {
			"namespace": "wc/v3",
			"methods": ["POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"country": {
							"required": false,
							"description": "Country ISO 3166 code.",
							"type": "string"
						},
						"state": {
							"required": false,
							"description": "State code.",
							"type": "string"
						},
						"postcode": {
							"required": false,
							"description": "Postcode / ZIP.",
							"type": "string"
						},
						"city": {
							"required": false,
							"description": "City name.",
							"type": "string"
						},
						"rate": {
							"required": false,
							"description": "Tax rate.",
							"type": "string"
						},
						"name": {
							"required": false,
							"description": "Tax rate name.",
							"type": "string"
						},
						"priority": {
							"required": false,
							"description": "Tax priority.",
							"type": "integer"
						},
						"compound": {
							"required": false,
							"description": "Whether or not this is a compound rate.",
							"type": "boolean"
						},
						"shipping": {
							"required": false,
							"description": "Whether or not this tax rate also gets applied to shipping.",
							"type": "boolean"
						},
						"order": {
							"required": false,
							"description": "Indicates the order that will appear in queries.",
							"type": "integer"
						},
						"class": {
							"required": false,
							"enum": ["standard", "reduced-rate", "zero-rate"],
							"description": "Tax class.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/taxes/batch"
			}
		},
		"/wc/v3/webhooks": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						},
						"page": {
							"required": false,
							"default": 1,
							"description": "Current page of the collection.",
							"type": "integer"
						},
						"per_page": {
							"required": false,
							"default": 10,
							"description": "Maximum number of items to be returned in result set.",
							"type": "integer"
						},
						"search": {
							"required": false,
							"description": "Limit results to those matching a string.",
							"type": "string"
						},
						"after": {
							"required": false,
							"description": "Limit response to resources published after a given ISO8601 compliant date.",
							"type": "string"
						},
						"before": {
							"required": false,
							"description": "Limit response to resources published before a given ISO8601 compliant date.",
							"type": "string"
						},
						"exclude": {
							"required": false,
							"default": [],
							"description": "Ensure result set excludes specific IDs.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"include": {
							"required": false,
							"default": [],
							"description": "Limit result set to specific ids.",
							"type": "array",
							"items": {
								"type": "integer"
							}
						},
						"offset": {
							"required": false,
							"description": "Offset the result set by a specific number of items.",
							"type": "integer"
						},
						"order": {
							"required": false,
							"default": "desc",
							"enum": ["asc", "desc"],
							"description": "Order sort attribute ascending or descending.",
							"type": "string"
						},
						"orderby": {
							"required": false,
							"default": "date",
							"enum": ["date", "id", "title"],
							"description": "Sort collection by object attribute.",
							"type": "string"
						},
						"status": {
							"required": false,
							"default": "all",
							"enum": ["all", "active", "paused", "disabled"],
							"description": "Limit result set to webhooks assigned a specific status.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST"],
					"args": {
						"name": {
							"required": false,
							"description": "A friendly name for the webhook.",
							"type": "string"
						},
						"status": {
							"required": false,
							"default": "active",
							"enum": ["active", "paused", "disabled"],
							"description": "Webhook status.",
							"type": "string"
						},
						"topic": {
							"required": true,
							"description": "Webhook topic.",
							"type": "string"
						},
						"secret": {
							"required": false,
							"description": "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.",
							"type": "string"
						},
						"delivery_url": {
							"required": true,
							"description": "Webhook delivery URL.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/webhooks"
			}
		},
		"/wc/v3/webhooks/(?P<id>[\\d]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH", "DELETE"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"name": {
							"required": false,
							"description": "A friendly name for the webhook.",
							"type": "string"
						},
						"status": {
							"required": false,
							"enum": ["active", "paused", "disabled"],
							"description": "Webhook status.",
							"type": "string"
						},
						"topic": {
							"required": false,
							"description": "Webhook topic.",
							"type": "string"
						},
						"secret": {
							"required": false,
							"description": "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["DELETE"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "integer"
						},
						"force": {
							"required": false,
							"default": false,
							"description": "Required to be true, as resource does not support trashing.",
							"type": "boolean"
						}
					}
				}
			]
		},
		"/wc/v3/webhooks/batch": {
			"namespace": "wc/v3",
			"methods": ["POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"name": {
							"required": false,
							"description": "A friendly name for the webhook.",
							"type": "string"
						},
						"status": {
							"required": false,
							"enum": ["active", "paused", "disabled"],
							"description": "Webhook status.",
							"type": "string"
						},
						"topic": {
							"required": false,
							"description": "Webhook topic.",
							"type": "string"
						},
						"secret": {
							"required": false,
							"description": "Secret key used to generate a hash of the delivered webhook and provided in the request headers. This will default to a MD5 hash from the current user's ID|username if not provided.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/webhooks/batch"
			}
		},
		"/wc/v3/system_status": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/system_status"
			}
		},
		"/wc/v3/system_status/tools": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/system_status/tools"
			}
		},
		"/wc/v3/system_status/tools/(?P<id>[\\w-]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "A unique identifier for the tool.",
							"type": "string"
						},
						"name": {
							"required": false,
							"description": "Tool name.",
							"type": "string"
						},
						"action": {
							"required": false,
							"description": "What running the tool will do.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "Tool description.",
							"type": "string"
						},
						"success": {
							"required": false,
							"description": "Did the tool run successfully?",
							"type": "boolean"
						},
						"message": {
							"required": false,
							"description": "Tool return message.",
							"type": "string"
						}
					}
				}
			]
		},
		"/wc/v3/shipping_methods": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/shipping_methods"
			}
		},
		"/wc/v3/shipping_methods/(?P<id>[\\w-]+)": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "string"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				}
			]
		},
		"/wc/v3/payment_gateways": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/payment_gateways"
			}
		},
		"/wc/v3/payment_gateways/(?P<id>[\\w-]+)": {
			"namespace": "wc/v3",
			"methods": ["GET", "POST", "PUT", "PATCH"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "string"
						},
						"context": {
							"required": false,
							"default": "view",
							"enum": ["view", "edit"],
							"description": "Scope under which the request is made; determines fields present in response.",
							"type": "string"
						}
					}
				},
				{
					"methods": ["POST", "PUT", "PATCH"],
					"args": {
						"id": {
							"required": false,
							"description": "Unique identifier for the resource.",
							"type": "string"
						},
						"title": {
							"required": false,
							"description": "Payment gateway title on checkout.",
							"type": "string"
						},
						"description": {
							"required": false,
							"description": "Payment gateway description on checkout.",
							"type": "string"
						},
						"order": {
							"required": false,
							"description": "Payment gateway sort order.",
							"type": "integer"
						},
						"enabled": {
							"required": false,
							"description": "Payment gateway enabled status.",
							"type": "boolean"
						},
						"settings": {
							"required": false,
							"description": "Payment gateway settings.",
							"type": "object"
						}
					}
				}
			]
		},
		"/wc/v3/data": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": []
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/data"
			}
		},
		"/wc/v3/data/continents": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": []
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/data/continents"
			}
		},
		"/wc/v3/data/continents/(?P<location>[\\w-]+)": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"continent": {
							"required": false,
							"description": "2 character continent code.",
							"type": "string"
						}
					}
				}
			]
		},
		"/wc/v3/data/countries": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": []
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/data/countries"
			}
		},
		"/wc/v3/data/countries/(?P<location>[\\w-]+)": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"location": {
							"required": false,
							"description": "ISO3166 alpha-2 country code.",
							"type": "string"
						}
					}
				}
			]
		},
		"/wc/v3/data/currencies": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": []
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/data/currencies"
			}
		},
		"/wc/v3/data/currencies/current": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": []
				}
			],
			"_links": {
				"self": "https://example.com/wp-json/wc/v3/data/currencies/current"
			}
		},
		"/wc/v3/data/currencies/(?P<currency>[\\w-]{3})": {
			"namespace": "wc/v3",
			"methods": ["GET"],
			"endpoints": [
				{
					"methods": ["GET"],
					"args": {
						"location": {
							"required": false,
							"description": "ISO4217 currency code.",
							"type": "string"
						}
					}
				}
			]
		}
	},
	"_links": {
		"up": [
			{
				"href": "https://example.com/wp-json/"
			}
		]
	}
}
